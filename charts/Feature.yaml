environmentKinds:
  - management
timeout: 10m0s
values:

  # Backend Config
  backend.logLevel:
    description: Log level for backend
    displayName: Backend log level
    config:
      type: string
  backend.env.ALPINE_CORS_ALLOW_ORIGIN:
    displayName: Backend CORS allow origin
    computed:
      template: '"https://salsa.{{.Tenant.Name}}.cloud.nais.io"'
  backend.env.ALPINE_DATABASE_POOL_MAX_LIFETIME:
    displayName: Backend database pool max lifetime
    computed:
      template: '"400000"'
  backend.env.ALPINE_OIDC_CLIENT_ID:
    displayName: Backend OIDC client ID
    required: true
    config:
      type: string
  backend.env.ALPINE_OIDC_ISSUER:
    displayName: Backend OIDC issuer
    computed:
      template: '"https://accounts.google.com"'
  backend.image.tag:
    description: dependency-track backend image
    displayName: Backend image tag
    config:
      type: string
  backend.ingress:
    description: Backend Ingress for salsa storage
    displayName: Backend Ingress
    computed:
      template: '"dependencytrack-backend.{{.Tenant.Name}}.cloud.nais.io"'
  backend.postgresql.connectionName:
    displayName: Backend postgresql connection name
    computed:
      template: '{{.Management.dependencytrack_database_instance | quote}}'
  backend.postgresql.database:
    displayName: Backend postgresql database
    computed:
      template: '{{.Management.dependencytrack_database_name | quote}}'
    config:
      type: string
  backend.postgresql.ip:
    displayName: Backend postgresql ip
    computed:
      template: '{{.Management.dependencytrack_database_ip | quote}}'
  backend.postgresql.password:
    description: Configure this if you want to use a custom postgresql password
    displayName: Backend postgresql password
    computed:
      template: '{{.Management.dependencytrack_database_password | quote}}'
    config:
      type: string
      secret: true
  backend.postgresql.username:
    description: Configure this if you want to use a custom postgresql username
    displayName: Backend postgresql username
    computed:
      template: '{{.Management.dependencytrack_database_user | quote}}'
    config:
      type: string
  backend.serviceAccount.googleServiceAccountEmail:
    displayName: Backend Google sa email
    computed:
      template: '{{.Management.dependencytrack_google_service_account_email | quote}}'
  backend.resources.requests.memory:
    displayName: Backend memory request
    config:
      type: string
  backend.resources.requests.cpu:
    displayName: Backend cpu request
    config:
      type: string

  # Bootstrap Config
  bootstrap.frontendBaseUrl:
    displayName: Bootstrap frontend base url
    computed:
      template: '"https://salsa.{{.Tenant.Name}}.cloud.nais.io"'
  bootstrap.github.advisory_mirroring_token:
    displayName: Bootstrap GitHub advisory mirroring token
    config:
      type: string
      secret: true
  bootstrap.adminPassword:
    displayName: Bootstrap admin password
    computed:
      template: '{{.Management.admin_dependencytrack_password | quote}}'
    config:
      type: string
      secret: true
  bootstrap.nvd.api_key:
    displayName: Bootstrap Mirroring NVD api key
    config:
      type: string
      secret: true
  bootstrap.trivy.api_token:
    displayName: Bootstrap Trivy api token
    computed:
      template: '{{.Management.trivy_server_token | quote}}'
    config:
      type: string
      secret: true
  bootstrap.trivy.base_url:
    displayName: Bootstrap Trivy base url
    config:
      type: string
  bootstrap.trivy.ignore_unfixed:
    displayName: Bootstrap Trivy ignore unfixed
    config:
      type: bool
  bootstrap.image.tag:
    description: dependency-track bootstrap image
    displayName: Bootstrap image tag
    config:
      type: string
  bootstrap.logLevel:
    description: Log level for bootstrap
    displayName: Bootstrap log level
    config:
      type: string
  bootstrap.users:
    displayName: Bootstrap users
    computed:
      template: |
        - username: "console"
          password: {{.Management.console_dependencytrack_password | quote}}
        - username: "teams"
          password: {{.Management.teams_dependencytrack_password | quote}}
        - username: "dtrack-resync"
          password: {{.Management.dtrack_resync_dependencytrack_password | quote}}
        - username: "slsa-verde"
          password: {{.Management.slsa_verde_dependencytrack_password | quote}}
  bootstrap.google.osv_enabled:
    displayName: Bootstrap Google OSV enabled
    config:
      type: bool

  # metrics Config
  metrics.image.tag:
    description: Metrics dependency-track image tag
    displayName: Metrics image tag
    config:
      type: string
  metrics.tenant:
    displayName: Tenant
    computed:
      template: '{{ .Tenant.Name }} | quote'

  # Frontend Config
  frontend.swagger.enabled:
    displayName: Swagger UI enabled
    config:
      type: bool
    computed:
      template: '{{ eq .Tenant.Name "dev-nais" }}'
  frontend.env.API_BASE_URL:
    description: Frontend Base URL for backend API
    displayName: API base URL
    computed:
      template: '"https://dependencytrack-backend.{{.Tenant.Name}}.cloud.nais.io"'
  frontend.env.OIDC_CLIENT_ID:
    displayName: Frontend OIDC client ID
    required: true
    config:
      type: string
  frontend.env.OIDC_ISSUER:
    displayName: Frontend OIDC issuer
    computed:
      template: '"https://accounts.google.com"'
  frontend.image.tag:
    description: dependency-track froentend image
    displayName: Frontend image tag
    config:
      type: string
  frontend.ingress:
    description: Ingress for salsa storage frontend
    displayName: Frontend Ingress
    computed:
      template: '"salsa.{{.Tenant.Name}}.cloud.nais.io"'
  frontend.resources.requests.memory:
    displayName: Frontend memory request
    config:
      type: string
  frontend.resources.requests.cpu:
    displayName: Frontend cpu request
    config:
      type: string

  # Trivy Config
  trivy.serverToken:
    displayName: Trivy server token
    computed:
      template: '{{.Management.trivy_server_token | quote}}'
    config:
      type: string
      secret: true
  trivy.image.tag:
    displayName: Trivy image tag
    config:
      type: string
  trivy.debugMode:
    displayName: Trivy debug mode
    config:
      type: string