/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the VisibleTeams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisibleTeams{}

// VisibleTeams struct for VisibleTeams
type VisibleTeams struct {
	Name *string `json:"name,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewVisibleTeams instantiates a new VisibleTeams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisibleTeams() *VisibleTeams {
	this := VisibleTeams{}
	return &this
}

// NewVisibleTeamsWithDefaults instantiates a new VisibleTeams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisibleTeamsWithDefaults() *VisibleTeams {
	this := VisibleTeams{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VisibleTeams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisibleTeams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VisibleTeams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VisibleTeams) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VisibleTeams) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisibleTeams) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VisibleTeams) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VisibleTeams) SetUuid(v string) {
	o.Uuid = &v
}

func (o VisibleTeams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisibleTeams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableVisibleTeams struct {
	value *VisibleTeams
	isSet bool
}

func (v NullableVisibleTeams) Get() *VisibleTeams {
	return v.value
}

func (v *NullableVisibleTeams) Set(val *VisibleTeams) {
	v.value = val
	v.isSet = true
}

func (v NullableVisibleTeams) IsSet() bool {
	return v.isSet
}

func (v *NullableVisibleTeams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisibleTeams(val *VisibleTeams) *NullableVisibleTeams {
	return &NullableVisibleTeams{value: val, isSet: true}
}

func (v NullableVisibleTeams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisibleTeams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


