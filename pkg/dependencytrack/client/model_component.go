/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Component type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Component{}

// Component struct for Component
type Component struct {
	Authors []OrganizationalContact `json:"authors,omitempty"`
	Publisher *string `json:"publisher,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Supplier *OrganizationalEntity `json:"supplier,omitempty"`
	Group *string `json:"group,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Name *string `json:"name,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Version *string `json:"version,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Classifier string `json:"classifier"`
	Filename *string "json:\"filename,omitempty\" validate:\"regexp=^[\\\\p{Alnum}:\\/\\\\\\\\!@#$%^&{}\\\\[\\\\]()_+\\\\-=,.~'` ]{1,255}$\""
	Extension *string "json:\"extension,omitempty\" validate:\"regexp=^[\\\\p{Alnum}!@#$%^&{}\\\\[\\\\]()_+\\\\-=,.~'` ]{1,255}$\""
	Md5 *string `json:"md5,omitempty" validate:"regexp=^[0-9a-fA-F]{32}$"`
	Sha1 *string `json:"sha1,omitempty" validate:"regexp=^[0-9a-fA-F]{40}$"`
	Sha256 *string `json:"sha256,omitempty" validate:"regexp=^[0-9a-fA-F]{64}$"`
	Sha384 *string `json:"sha384,omitempty" validate:"regexp=^[0-9a-fA-F]{96}$"`
	Sha512 *string `json:"sha512,omitempty" validate:"regexp=^[0-9a-fA-F]{128}$"`
	Sha3256 *string `json:"sha3_256,omitempty" validate:"regexp=^[0-9a-fA-F]{64}$"`
	Sha3384 *string `json:"sha3_384,omitempty" validate:"regexp=^[0-9a-fA-F]{96}$"`
	Sha3512 *string `json:"sha3_512,omitempty" validate:"regexp=^[0-9a-fA-F]{128}$"`
	Blake2b256 *string `json:"blake2b_256,omitempty" validate:"regexp=^[0-9a-f]{64}$"`
	Blake2b384 *string `json:"blake2b_384,omitempty" validate:"regexp=^[0-9a-f]{96}$"`
	Blake2b512 *string `json:"blake2b_512,omitempty" validate:"regexp=^[0-9a-f]{128}$"`
	Blake3 *string `json:"blake3,omitempty" validate:"regexp=^[A-Fa-f0-9]*$"`
	Cpe *string "json:\"cpe,omitempty\" validate:\"regexp=(cpe:2\\\\.3:[aho\\\\*\\\\-](:(((\\\\?*|\\\\*?)([a-zA-Z0-9\\\\-\\\\._]|(\\\\\\\\[\\\\\\\\\\\\*\\\\?!\\\"#$$%&'\\\\(\\\\)\\\\+,\\/:;<=>@\\\\[\\\\]\\\\^`\\\\{\\\\|}~]))+(\\\\?*|\\\\*?))|[\\\\*\\\\-])){5}(:(([a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))?)|[\\\\*\\\\-]))(:(((\\\\?*|\\\\*?)([a-zA-Z0-9\\\\-\\\\._]|(\\\\\\\\[\\\\\\\\\\\\*\\\\?!\\\"#$$%&'\\\\(\\\\)\\\\+,\\/:;<=>@\\\\[\\\\]\\\\^`\\\\{\\\\|}~]))+(\\\\?*|\\\\*?))|[\\\\*\\\\-])){4})|([c][pP][eE]:\\/[AHOaho]?(:[A-Za-z0-9\\\\._\\\\-~%]*){0,6})\""
	Purl *string `json:"purl,omitempty"`
	PurlCoordinates *string `json:"purlCoordinates,omitempty"`
	SwidTagId *string `json:"swidTagId,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Description *string `json:"description,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Copyright *string `json:"copyright,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	License *string `json:"license,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	LicenseExpression *string `json:"licenseExpression,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	LicenseUrl *string `json:"licenseUrl,omitempty" validate:"regexp=^((((https?|ftps?|sftp|imap|rtsp|rtmp|sip|sips|git|ssh|telnet|nntp|file):\\/\\/)|(mailto:|news:))(%[0-9A-Fa-f]{2}|[-()_.!~*';\\/?:@&=+$,A-Za-z0-9])+)([).!';\\/?:,][[:blank:]])?$"`
	ResolvedLicense *License `json:"resolvedLicense,omitempty"`
	DirectDependencies *string `json:"directDependencies,omitempty"`
	ExternalReferences []ExternalReference `json:"externalReferences,omitempty"`
	Parent *Component `json:"parent,omitempty"`
	Children []Component `json:"children,omitempty"`
	Properties []ComponentProperty `json:"properties,omitempty"`
	Vulnerabilities []Vulnerability `json:"vulnerabilities,omitempty"`
	Project Project `json:"project"`
	LastInheritedRiskScore *float64 `json:"lastInheritedRiskScore,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Uuid string `json:"uuid"`
	Author *string `json:"author,omitempty"`
	Metrics *DependencyMetrics `json:"metrics,omitempty"`
	RepositoryMeta *RepositoryMetaComponent `json:"repositoryMeta,omitempty"`
	DependencyGraph []string `json:"dependencyGraph,omitempty"`
	ExpandDependencyGraph *bool `json:"expandDependencyGraph,omitempty"`
	IsInternal *bool `json:"isInternal,omitempty"`
}

type _Component Component

// NewComponent instantiates a new Component object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponent(classifier string, project Project, uuid string) *Component {
	this := Component{}
	this.Classifier = classifier
	this.Project = project
	this.Uuid = uuid
	return &this
}

// NewComponentWithDefaults instantiates a new Component object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentWithDefaults() *Component {
	this := Component{}
	return &this
}

// GetAuthors returns the Authors field value if set, zero value otherwise.
func (o *Component) GetAuthors() []OrganizationalContact {
	if o == nil || IsNil(o.Authors) {
		var ret []OrganizationalContact
		return ret
	}
	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetAuthorsOk() ([]OrganizationalContact, bool) {
	if o == nil || IsNil(o.Authors) {
		return nil, false
	}
	return o.Authors, true
}

// HasAuthors returns a boolean if a field has been set.
func (o *Component) HasAuthors() bool {
	if o != nil && !IsNil(o.Authors) {
		return true
	}

	return false
}

// SetAuthors gets a reference to the given []OrganizationalContact and assigns it to the Authors field.
func (o *Component) SetAuthors(v []OrganizationalContact) {
	o.Authors = v
}

// GetPublisher returns the Publisher field value if set, zero value otherwise.
func (o *Component) GetPublisher() string {
	if o == nil || IsNil(o.Publisher) {
		var ret string
		return ret
	}
	return *o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetPublisherOk() (*string, bool) {
	if o == nil || IsNil(o.Publisher) {
		return nil, false
	}
	return o.Publisher, true
}

// HasPublisher returns a boolean if a field has been set.
func (o *Component) HasPublisher() bool {
	if o != nil && !IsNil(o.Publisher) {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given string and assigns it to the Publisher field.
func (o *Component) SetPublisher(v string) {
	o.Publisher = &v
}

// GetSupplier returns the Supplier field value if set, zero value otherwise.
func (o *Component) GetSupplier() OrganizationalEntity {
	if o == nil || IsNil(o.Supplier) {
		var ret OrganizationalEntity
		return ret
	}
	return *o.Supplier
}

// GetSupplierOk returns a tuple with the Supplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSupplierOk() (*OrganizationalEntity, bool) {
	if o == nil || IsNil(o.Supplier) {
		return nil, false
	}
	return o.Supplier, true
}

// HasSupplier returns a boolean if a field has been set.
func (o *Component) HasSupplier() bool {
	if o != nil && !IsNil(o.Supplier) {
		return true
	}

	return false
}

// SetSupplier gets a reference to the given OrganizationalEntity and assigns it to the Supplier field.
func (o *Component) SetSupplier(v OrganizationalEntity) {
	o.Supplier = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Component) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *Component) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *Component) SetGroup(v string) {
	o.Group = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Component) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Component) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Component) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Component) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Component) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Component) SetVersion(v string) {
	o.Version = &v
}

// GetClassifier returns the Classifier field value
func (o *Component) GetClassifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Classifier
}

// GetClassifierOk returns a tuple with the Classifier field value
// and a boolean to check if the value has been set.
func (o *Component) GetClassifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Classifier, true
}

// SetClassifier sets field value
func (o *Component) SetClassifier(v string) {
	o.Classifier = v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *Component) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *Component) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *Component) SetFilename(v string) {
	o.Filename = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *Component) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *Component) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *Component) SetExtension(v string) {
	o.Extension = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *Component) GetMd5() string {
	if o == nil || IsNil(o.Md5) {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetMd5Ok() (*string, bool) {
	if o == nil || IsNil(o.Md5) {
		return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *Component) HasMd5() bool {
	if o != nil && !IsNil(o.Md5) {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *Component) SetMd5(v string) {
	o.Md5 = &v
}

// GetSha1 returns the Sha1 field value if set, zero value otherwise.
func (o *Component) GetSha1() string {
	if o == nil || IsNil(o.Sha1) {
		var ret string
		return ret
	}
	return *o.Sha1
}

// GetSha1Ok returns a tuple with the Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha1Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha1) {
		return nil, false
	}
	return o.Sha1, true
}

// HasSha1 returns a boolean if a field has been set.
func (o *Component) HasSha1() bool {
	if o != nil && !IsNil(o.Sha1) {
		return true
	}

	return false
}

// SetSha1 gets a reference to the given string and assigns it to the Sha1 field.
func (o *Component) SetSha1(v string) {
	o.Sha1 = &v
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *Component) GetSha256() string {
	if o == nil || IsNil(o.Sha256) {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha256) {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *Component) HasSha256() bool {
	if o != nil && !IsNil(o.Sha256) {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *Component) SetSha256(v string) {
	o.Sha256 = &v
}

// GetSha384 returns the Sha384 field value if set, zero value otherwise.
func (o *Component) GetSha384() string {
	if o == nil || IsNil(o.Sha384) {
		var ret string
		return ret
	}
	return *o.Sha384
}

// GetSha384Ok returns a tuple with the Sha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha384Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha384) {
		return nil, false
	}
	return o.Sha384, true
}

// HasSha384 returns a boolean if a field has been set.
func (o *Component) HasSha384() bool {
	if o != nil && !IsNil(o.Sha384) {
		return true
	}

	return false
}

// SetSha384 gets a reference to the given string and assigns it to the Sha384 field.
func (o *Component) SetSha384(v string) {
	o.Sha384 = &v
}

// GetSha512 returns the Sha512 field value if set, zero value otherwise.
func (o *Component) GetSha512() string {
	if o == nil || IsNil(o.Sha512) {
		var ret string
		return ret
	}
	return *o.Sha512
}

// GetSha512Ok returns a tuple with the Sha512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha512Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha512) {
		return nil, false
	}
	return o.Sha512, true
}

// HasSha512 returns a boolean if a field has been set.
func (o *Component) HasSha512() bool {
	if o != nil && !IsNil(o.Sha512) {
		return true
	}

	return false
}

// SetSha512 gets a reference to the given string and assigns it to the Sha512 field.
func (o *Component) SetSha512(v string) {
	o.Sha512 = &v
}

// GetSha3256 returns the Sha3256 field value if set, zero value otherwise.
func (o *Component) GetSha3256() string {
	if o == nil || IsNil(o.Sha3256) {
		var ret string
		return ret
	}
	return *o.Sha3256
}

// GetSha3256Ok returns a tuple with the Sha3256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha3256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha3256) {
		return nil, false
	}
	return o.Sha3256, true
}

// HasSha3256 returns a boolean if a field has been set.
func (o *Component) HasSha3256() bool {
	if o != nil && !IsNil(o.Sha3256) {
		return true
	}

	return false
}

// SetSha3256 gets a reference to the given string and assigns it to the Sha3256 field.
func (o *Component) SetSha3256(v string) {
	o.Sha3256 = &v
}

// GetSha3384 returns the Sha3384 field value if set, zero value otherwise.
func (o *Component) GetSha3384() string {
	if o == nil || IsNil(o.Sha3384) {
		var ret string
		return ret
	}
	return *o.Sha3384
}

// GetSha3384Ok returns a tuple with the Sha3384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha3384Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha3384) {
		return nil, false
	}
	return o.Sha3384, true
}

// HasSha3384 returns a boolean if a field has been set.
func (o *Component) HasSha3384() bool {
	if o != nil && !IsNil(o.Sha3384) {
		return true
	}

	return false
}

// SetSha3384 gets a reference to the given string and assigns it to the Sha3384 field.
func (o *Component) SetSha3384(v string) {
	o.Sha3384 = &v
}

// GetSha3512 returns the Sha3512 field value if set, zero value otherwise.
func (o *Component) GetSha3512() string {
	if o == nil || IsNil(o.Sha3512) {
		var ret string
		return ret
	}
	return *o.Sha3512
}

// GetSha3512Ok returns a tuple with the Sha3512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSha3512Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha3512) {
		return nil, false
	}
	return o.Sha3512, true
}

// HasSha3512 returns a boolean if a field has been set.
func (o *Component) HasSha3512() bool {
	if o != nil && !IsNil(o.Sha3512) {
		return true
	}

	return false
}

// SetSha3512 gets a reference to the given string and assigns it to the Sha3512 field.
func (o *Component) SetSha3512(v string) {
	o.Sha3512 = &v
}

// GetBlake2b256 returns the Blake2b256 field value if set, zero value otherwise.
func (o *Component) GetBlake2b256() string {
	if o == nil || IsNil(o.Blake2b256) {
		var ret string
		return ret
	}
	return *o.Blake2b256
}

// GetBlake2b256Ok returns a tuple with the Blake2b256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetBlake2b256Ok() (*string, bool) {
	if o == nil || IsNil(o.Blake2b256) {
		return nil, false
	}
	return o.Blake2b256, true
}

// HasBlake2b256 returns a boolean if a field has been set.
func (o *Component) HasBlake2b256() bool {
	if o != nil && !IsNil(o.Blake2b256) {
		return true
	}

	return false
}

// SetBlake2b256 gets a reference to the given string and assigns it to the Blake2b256 field.
func (o *Component) SetBlake2b256(v string) {
	o.Blake2b256 = &v
}

// GetBlake2b384 returns the Blake2b384 field value if set, zero value otherwise.
func (o *Component) GetBlake2b384() string {
	if o == nil || IsNil(o.Blake2b384) {
		var ret string
		return ret
	}
	return *o.Blake2b384
}

// GetBlake2b384Ok returns a tuple with the Blake2b384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetBlake2b384Ok() (*string, bool) {
	if o == nil || IsNil(o.Blake2b384) {
		return nil, false
	}
	return o.Blake2b384, true
}

// HasBlake2b384 returns a boolean if a field has been set.
func (o *Component) HasBlake2b384() bool {
	if o != nil && !IsNil(o.Blake2b384) {
		return true
	}

	return false
}

// SetBlake2b384 gets a reference to the given string and assigns it to the Blake2b384 field.
func (o *Component) SetBlake2b384(v string) {
	o.Blake2b384 = &v
}

// GetBlake2b512 returns the Blake2b512 field value if set, zero value otherwise.
func (o *Component) GetBlake2b512() string {
	if o == nil || IsNil(o.Blake2b512) {
		var ret string
		return ret
	}
	return *o.Blake2b512
}

// GetBlake2b512Ok returns a tuple with the Blake2b512 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetBlake2b512Ok() (*string, bool) {
	if o == nil || IsNil(o.Blake2b512) {
		return nil, false
	}
	return o.Blake2b512, true
}

// HasBlake2b512 returns a boolean if a field has been set.
func (o *Component) HasBlake2b512() bool {
	if o != nil && !IsNil(o.Blake2b512) {
		return true
	}

	return false
}

// SetBlake2b512 gets a reference to the given string and assigns it to the Blake2b512 field.
func (o *Component) SetBlake2b512(v string) {
	o.Blake2b512 = &v
}

// GetBlake3 returns the Blake3 field value if set, zero value otherwise.
func (o *Component) GetBlake3() string {
	if o == nil || IsNil(o.Blake3) {
		var ret string
		return ret
	}
	return *o.Blake3
}

// GetBlake3Ok returns a tuple with the Blake3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetBlake3Ok() (*string, bool) {
	if o == nil || IsNil(o.Blake3) {
		return nil, false
	}
	return o.Blake3, true
}

// HasBlake3 returns a boolean if a field has been set.
func (o *Component) HasBlake3() bool {
	if o != nil && !IsNil(o.Blake3) {
		return true
	}

	return false
}

// SetBlake3 gets a reference to the given string and assigns it to the Blake3 field.
func (o *Component) SetBlake3(v string) {
	o.Blake3 = &v
}

// GetCpe returns the Cpe field value if set, zero value otherwise.
func (o *Component) GetCpe() string {
	if o == nil || IsNil(o.Cpe) {
		var ret string
		return ret
	}
	return *o.Cpe
}

// GetCpeOk returns a tuple with the Cpe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetCpeOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe) {
		return nil, false
	}
	return o.Cpe, true
}

// HasCpe returns a boolean if a field has been set.
func (o *Component) HasCpe() bool {
	if o != nil && !IsNil(o.Cpe) {
		return true
	}

	return false
}

// SetCpe gets a reference to the given string and assigns it to the Cpe field.
func (o *Component) SetCpe(v string) {
	o.Cpe = &v
}

// GetPurl returns the Purl field value if set, zero value otherwise.
func (o *Component) GetPurl() string {
	if o == nil || IsNil(o.Purl) {
		var ret string
		return ret
	}
	return *o.Purl
}

// GetPurlOk returns a tuple with the Purl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetPurlOk() (*string, bool) {
	if o == nil || IsNil(o.Purl) {
		return nil, false
	}
	return o.Purl, true
}

// HasPurl returns a boolean if a field has been set.
func (o *Component) HasPurl() bool {
	if o != nil && !IsNil(o.Purl) {
		return true
	}

	return false
}

// SetPurl gets a reference to the given string and assigns it to the Purl field.
func (o *Component) SetPurl(v string) {
	o.Purl = &v
}

// GetPurlCoordinates returns the PurlCoordinates field value if set, zero value otherwise.
func (o *Component) GetPurlCoordinates() string {
	if o == nil || IsNil(o.PurlCoordinates) {
		var ret string
		return ret
	}
	return *o.PurlCoordinates
}

// GetPurlCoordinatesOk returns a tuple with the PurlCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetPurlCoordinatesOk() (*string, bool) {
	if o == nil || IsNil(o.PurlCoordinates) {
		return nil, false
	}
	return o.PurlCoordinates, true
}

// HasPurlCoordinates returns a boolean if a field has been set.
func (o *Component) HasPurlCoordinates() bool {
	if o != nil && !IsNil(o.PurlCoordinates) {
		return true
	}

	return false
}

// SetPurlCoordinates gets a reference to the given string and assigns it to the PurlCoordinates field.
func (o *Component) SetPurlCoordinates(v string) {
	o.PurlCoordinates = &v
}

// GetSwidTagId returns the SwidTagId field value if set, zero value otherwise.
func (o *Component) GetSwidTagId() string {
	if o == nil || IsNil(o.SwidTagId) {
		var ret string
		return ret
	}
	return *o.SwidTagId
}

// GetSwidTagIdOk returns a tuple with the SwidTagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetSwidTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.SwidTagId) {
		return nil, false
	}
	return o.SwidTagId, true
}

// HasSwidTagId returns a boolean if a field has been set.
func (o *Component) HasSwidTagId() bool {
	if o != nil && !IsNil(o.SwidTagId) {
		return true
	}

	return false
}

// SetSwidTagId gets a reference to the given string and assigns it to the SwidTagId field.
func (o *Component) SetSwidTagId(v string) {
	o.SwidTagId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Component) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Component) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Component) SetDescription(v string) {
	o.Description = &v
}

// GetCopyright returns the Copyright field value if set, zero value otherwise.
func (o *Component) GetCopyright() string {
	if o == nil || IsNil(o.Copyright) {
		var ret string
		return ret
	}
	return *o.Copyright
}

// GetCopyrightOk returns a tuple with the Copyright field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetCopyrightOk() (*string, bool) {
	if o == nil || IsNil(o.Copyright) {
		return nil, false
	}
	return o.Copyright, true
}

// HasCopyright returns a boolean if a field has been set.
func (o *Component) HasCopyright() bool {
	if o != nil && !IsNil(o.Copyright) {
		return true
	}

	return false
}

// SetCopyright gets a reference to the given string and assigns it to the Copyright field.
func (o *Component) SetCopyright(v string) {
	o.Copyright = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *Component) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *Component) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *Component) SetLicense(v string) {
	o.License = &v
}

// GetLicenseExpression returns the LicenseExpression field value if set, zero value otherwise.
func (o *Component) GetLicenseExpression() string {
	if o == nil || IsNil(o.LicenseExpression) {
		var ret string
		return ret
	}
	return *o.LicenseExpression
}

// GetLicenseExpressionOk returns a tuple with the LicenseExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetLicenseExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseExpression) {
		return nil, false
	}
	return o.LicenseExpression, true
}

// HasLicenseExpression returns a boolean if a field has been set.
func (o *Component) HasLicenseExpression() bool {
	if o != nil && !IsNil(o.LicenseExpression) {
		return true
	}

	return false
}

// SetLicenseExpression gets a reference to the given string and assigns it to the LicenseExpression field.
func (o *Component) SetLicenseExpression(v string) {
	o.LicenseExpression = &v
}

// GetLicenseUrl returns the LicenseUrl field value if set, zero value otherwise.
func (o *Component) GetLicenseUrl() string {
	if o == nil || IsNil(o.LicenseUrl) {
		var ret string
		return ret
	}
	return *o.LicenseUrl
}

// GetLicenseUrlOk returns a tuple with the LicenseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetLicenseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseUrl) {
		return nil, false
	}
	return o.LicenseUrl, true
}

// HasLicenseUrl returns a boolean if a field has been set.
func (o *Component) HasLicenseUrl() bool {
	if o != nil && !IsNil(o.LicenseUrl) {
		return true
	}

	return false
}

// SetLicenseUrl gets a reference to the given string and assigns it to the LicenseUrl field.
func (o *Component) SetLicenseUrl(v string) {
	o.LicenseUrl = &v
}

// GetResolvedLicense returns the ResolvedLicense field value if set, zero value otherwise.
func (o *Component) GetResolvedLicense() License {
	if o == nil || IsNil(o.ResolvedLicense) {
		var ret License
		return ret
	}
	return *o.ResolvedLicense
}

// GetResolvedLicenseOk returns a tuple with the ResolvedLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetResolvedLicenseOk() (*License, bool) {
	if o == nil || IsNil(o.ResolvedLicense) {
		return nil, false
	}
	return o.ResolvedLicense, true
}

// HasResolvedLicense returns a boolean if a field has been set.
func (o *Component) HasResolvedLicense() bool {
	if o != nil && !IsNil(o.ResolvedLicense) {
		return true
	}

	return false
}

// SetResolvedLicense gets a reference to the given License and assigns it to the ResolvedLicense field.
func (o *Component) SetResolvedLicense(v License) {
	o.ResolvedLicense = &v
}

// GetDirectDependencies returns the DirectDependencies field value if set, zero value otherwise.
func (o *Component) GetDirectDependencies() string {
	if o == nil || IsNil(o.DirectDependencies) {
		var ret string
		return ret
	}
	return *o.DirectDependencies
}

// GetDirectDependenciesOk returns a tuple with the DirectDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetDirectDependenciesOk() (*string, bool) {
	if o == nil || IsNil(o.DirectDependencies) {
		return nil, false
	}
	return o.DirectDependencies, true
}

// HasDirectDependencies returns a boolean if a field has been set.
func (o *Component) HasDirectDependencies() bool {
	if o != nil && !IsNil(o.DirectDependencies) {
		return true
	}

	return false
}

// SetDirectDependencies gets a reference to the given string and assigns it to the DirectDependencies field.
func (o *Component) SetDirectDependencies(v string) {
	o.DirectDependencies = &v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *Component) GetExternalReferences() []ExternalReference {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []ExternalReference
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetExternalReferencesOk() ([]ExternalReference, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *Component) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []ExternalReference and assigns it to the ExternalReferences field.
func (o *Component) SetExternalReferences(v []ExternalReference) {
	o.ExternalReferences = v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *Component) GetParent() Component {
	if o == nil || IsNil(o.Parent) {
		var ret Component
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetParentOk() (*Component, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *Component) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given Component and assigns it to the Parent field.
func (o *Component) SetParent(v Component) {
	o.Parent = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *Component) GetChildren() []Component {
	if o == nil || IsNil(o.Children) {
		var ret []Component
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetChildrenOk() ([]Component, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *Component) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []Component and assigns it to the Children field.
func (o *Component) SetChildren(v []Component) {
	o.Children = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *Component) GetProperties() []ComponentProperty {
	if o == nil || IsNil(o.Properties) {
		var ret []ComponentProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetPropertiesOk() ([]ComponentProperty, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Component) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []ComponentProperty and assigns it to the Properties field.
func (o *Component) SetProperties(v []ComponentProperty) {
	o.Properties = v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *Component) GetVulnerabilities() []Vulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []Vulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetVulnerabilitiesOk() ([]Vulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *Component) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []Vulnerability and assigns it to the Vulnerabilities field.
func (o *Component) SetVulnerabilities(v []Vulnerability) {
	o.Vulnerabilities = v
}

// GetProject returns the Project field value
func (o *Component) GetProject() Project {
	if o == nil {
		var ret Project
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *Component) GetProjectOk() (*Project, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *Component) SetProject(v Project) {
	o.Project = v
}

// GetLastInheritedRiskScore returns the LastInheritedRiskScore field value if set, zero value otherwise.
func (o *Component) GetLastInheritedRiskScore() float64 {
	if o == nil || IsNil(o.LastInheritedRiskScore) {
		var ret float64
		return ret
	}
	return *o.LastInheritedRiskScore
}

// GetLastInheritedRiskScoreOk returns a tuple with the LastInheritedRiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetLastInheritedRiskScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.LastInheritedRiskScore) {
		return nil, false
	}
	return o.LastInheritedRiskScore, true
}

// HasLastInheritedRiskScore returns a boolean if a field has been set.
func (o *Component) HasLastInheritedRiskScore() bool {
	if o != nil && !IsNil(o.LastInheritedRiskScore) {
		return true
	}

	return false
}

// SetLastInheritedRiskScore gets a reference to the given float64 and assigns it to the LastInheritedRiskScore field.
func (o *Component) SetLastInheritedRiskScore(v float64) {
	o.LastInheritedRiskScore = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Component) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Component) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Component) SetNotes(v string) {
	o.Notes = &v
}

// GetUuid returns the Uuid field value
func (o *Component) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *Component) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *Component) SetUuid(v string) {
	o.Uuid = v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *Component) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *Component) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *Component) SetAuthor(v string) {
	o.Author = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *Component) GetMetrics() DependencyMetrics {
	if o == nil || IsNil(o.Metrics) {
		var ret DependencyMetrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetMetricsOk() (*DependencyMetrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *Component) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given DependencyMetrics and assigns it to the Metrics field.
func (o *Component) SetMetrics(v DependencyMetrics) {
	o.Metrics = &v
}

// GetRepositoryMeta returns the RepositoryMeta field value if set, zero value otherwise.
func (o *Component) GetRepositoryMeta() RepositoryMetaComponent {
	if o == nil || IsNil(o.RepositoryMeta) {
		var ret RepositoryMetaComponent
		return ret
	}
	return *o.RepositoryMeta
}

// GetRepositoryMetaOk returns a tuple with the RepositoryMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetRepositoryMetaOk() (*RepositoryMetaComponent, bool) {
	if o == nil || IsNil(o.RepositoryMeta) {
		return nil, false
	}
	return o.RepositoryMeta, true
}

// HasRepositoryMeta returns a boolean if a field has been set.
func (o *Component) HasRepositoryMeta() bool {
	if o != nil && !IsNil(o.RepositoryMeta) {
		return true
	}

	return false
}

// SetRepositoryMeta gets a reference to the given RepositoryMetaComponent and assigns it to the RepositoryMeta field.
func (o *Component) SetRepositoryMeta(v RepositoryMetaComponent) {
	o.RepositoryMeta = &v
}

// GetDependencyGraph returns the DependencyGraph field value if set, zero value otherwise.
func (o *Component) GetDependencyGraph() []string {
	if o == nil || IsNil(o.DependencyGraph) {
		var ret []string
		return ret
	}
	return o.DependencyGraph
}

// GetDependencyGraphOk returns a tuple with the DependencyGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetDependencyGraphOk() ([]string, bool) {
	if o == nil || IsNil(o.DependencyGraph) {
		return nil, false
	}
	return o.DependencyGraph, true
}

// HasDependencyGraph returns a boolean if a field has been set.
func (o *Component) HasDependencyGraph() bool {
	if o != nil && !IsNil(o.DependencyGraph) {
		return true
	}

	return false
}

// SetDependencyGraph gets a reference to the given []string and assigns it to the DependencyGraph field.
func (o *Component) SetDependencyGraph(v []string) {
	o.DependencyGraph = v
}

// GetExpandDependencyGraph returns the ExpandDependencyGraph field value if set, zero value otherwise.
func (o *Component) GetExpandDependencyGraph() bool {
	if o == nil || IsNil(o.ExpandDependencyGraph) {
		var ret bool
		return ret
	}
	return *o.ExpandDependencyGraph
}

// GetExpandDependencyGraphOk returns a tuple with the ExpandDependencyGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetExpandDependencyGraphOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpandDependencyGraph) {
		return nil, false
	}
	return o.ExpandDependencyGraph, true
}

// HasExpandDependencyGraph returns a boolean if a field has been set.
func (o *Component) HasExpandDependencyGraph() bool {
	if o != nil && !IsNil(o.ExpandDependencyGraph) {
		return true
	}

	return false
}

// SetExpandDependencyGraph gets a reference to the given bool and assigns it to the ExpandDependencyGraph field.
func (o *Component) SetExpandDependencyGraph(v bool) {
	o.ExpandDependencyGraph = &v
}

// GetIsInternal returns the IsInternal field value if set, zero value otherwise.
func (o *Component) GetIsInternal() bool {
	if o == nil || IsNil(o.IsInternal) {
		var ret bool
		return ret
	}
	return *o.IsInternal
}

// GetIsInternalOk returns a tuple with the IsInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetIsInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInternal) {
		return nil, false
	}
	return o.IsInternal, true
}

// HasIsInternal returns a boolean if a field has been set.
func (o *Component) HasIsInternal() bool {
	if o != nil && !IsNil(o.IsInternal) {
		return true
	}

	return false
}

// SetIsInternal gets a reference to the given bool and assigns it to the IsInternal field.
func (o *Component) SetIsInternal(v bool) {
	o.IsInternal = &v
}

func (o Component) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Component) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authors) {
		toSerialize["authors"] = o.Authors
	}
	if !IsNil(o.Publisher) {
		toSerialize["publisher"] = o.Publisher
	}
	if !IsNil(o.Supplier) {
		toSerialize["supplier"] = o.Supplier
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["classifier"] = o.Classifier
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.Md5) {
		toSerialize["md5"] = o.Md5
	}
	if !IsNil(o.Sha1) {
		toSerialize["sha1"] = o.Sha1
	}
	if !IsNil(o.Sha256) {
		toSerialize["sha256"] = o.Sha256
	}
	if !IsNil(o.Sha384) {
		toSerialize["sha384"] = o.Sha384
	}
	if !IsNil(o.Sha512) {
		toSerialize["sha512"] = o.Sha512
	}
	if !IsNil(o.Sha3256) {
		toSerialize["sha3_256"] = o.Sha3256
	}
	if !IsNil(o.Sha3384) {
		toSerialize["sha3_384"] = o.Sha3384
	}
	if !IsNil(o.Sha3512) {
		toSerialize["sha3_512"] = o.Sha3512
	}
	if !IsNil(o.Blake2b256) {
		toSerialize["blake2b_256"] = o.Blake2b256
	}
	if !IsNil(o.Blake2b384) {
		toSerialize["blake2b_384"] = o.Blake2b384
	}
	if !IsNil(o.Blake2b512) {
		toSerialize["blake2b_512"] = o.Blake2b512
	}
	if !IsNil(o.Blake3) {
		toSerialize["blake3"] = o.Blake3
	}
	if !IsNil(o.Cpe) {
		toSerialize["cpe"] = o.Cpe
	}
	if !IsNil(o.Purl) {
		toSerialize["purl"] = o.Purl
	}
	if !IsNil(o.PurlCoordinates) {
		toSerialize["purlCoordinates"] = o.PurlCoordinates
	}
	if !IsNil(o.SwidTagId) {
		toSerialize["swidTagId"] = o.SwidTagId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Copyright) {
		toSerialize["copyright"] = o.Copyright
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.LicenseExpression) {
		toSerialize["licenseExpression"] = o.LicenseExpression
	}
	if !IsNil(o.LicenseUrl) {
		toSerialize["licenseUrl"] = o.LicenseUrl
	}
	if !IsNil(o.ResolvedLicense) {
		toSerialize["resolvedLicense"] = o.ResolvedLicense
	}
	if !IsNil(o.DirectDependencies) {
		toSerialize["directDependencies"] = o.DirectDependencies
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	toSerialize["project"] = o.Project
	if !IsNil(o.LastInheritedRiskScore) {
		toSerialize["lastInheritedRiskScore"] = o.LastInheritedRiskScore
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	toSerialize["uuid"] = o.Uuid
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.RepositoryMeta) {
		toSerialize["repositoryMeta"] = o.RepositoryMeta
	}
	if !IsNil(o.DependencyGraph) {
		toSerialize["dependencyGraph"] = o.DependencyGraph
	}
	if !IsNil(o.ExpandDependencyGraph) {
		toSerialize["expandDependencyGraph"] = o.ExpandDependencyGraph
	}
	if !IsNil(o.IsInternal) {
		toSerialize["isInternal"] = o.IsInternal
	}
	return toSerialize, nil
}

func (o *Component) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"classifier",
		"project",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varComponent := _Component{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varComponent)

	if err != nil {
		return err
	}

	*o = Component(varComponent)

	return err
}

type NullableComponent struct {
	value *Component
	isSet bool
}

func (v NullableComponent) Get() *Component {
	return v.value
}

func (v *NullableComponent) Set(val *Component) {
	v.value = val
	v.isSet = true
}

func (v NullableComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponent(val *Component) *NullableComponent {
	return &NullableComponent{value: val, isSet: true}
}

func (v NullableComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


