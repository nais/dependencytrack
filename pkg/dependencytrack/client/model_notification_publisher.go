/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NotificationPublisher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationPublisher{}

// NotificationPublisher struct for NotificationPublisher
type NotificationPublisher struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	PublisherClass string `json:"publisherClass"`
	Template *string `json:"template,omitempty"`
	TemplateMimeType string `json:"templateMimeType"`
	DefaultPublisher *bool `json:"defaultPublisher,omitempty"`
	Uuid string `json:"uuid"`
}

type _NotificationPublisher NotificationPublisher

// NewNotificationPublisher instantiates a new NotificationPublisher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationPublisher(name string, publisherClass string, templateMimeType string, uuid string) *NotificationPublisher {
	this := NotificationPublisher{}
	this.Name = name
	this.PublisherClass = publisherClass
	this.TemplateMimeType = templateMimeType
	this.Uuid = uuid
	return &this
}

// NewNotificationPublisherWithDefaults instantiates a new NotificationPublisher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationPublisherWithDefaults() *NotificationPublisher {
	this := NotificationPublisher{}
	return &this
}

// GetName returns the Name field value
func (o *NotificationPublisher) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NotificationPublisher) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NotificationPublisher) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NotificationPublisher) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NotificationPublisher) SetDescription(v string) {
	o.Description = &v
}

// GetPublisherClass returns the PublisherClass field value
func (o *NotificationPublisher) GetPublisherClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublisherClass
}

// GetPublisherClassOk returns a tuple with the PublisherClass field value
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetPublisherClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublisherClass, true
}

// SetPublisherClass sets field value
func (o *NotificationPublisher) SetPublisherClass(v string) {
	o.PublisherClass = v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *NotificationPublisher) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *NotificationPublisher) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *NotificationPublisher) SetTemplate(v string) {
	o.Template = &v
}

// GetTemplateMimeType returns the TemplateMimeType field value
func (o *NotificationPublisher) GetTemplateMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateMimeType
}

// GetTemplateMimeTypeOk returns a tuple with the TemplateMimeType field value
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetTemplateMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateMimeType, true
}

// SetTemplateMimeType sets field value
func (o *NotificationPublisher) SetTemplateMimeType(v string) {
	o.TemplateMimeType = v
}

// GetDefaultPublisher returns the DefaultPublisher field value if set, zero value otherwise.
func (o *NotificationPublisher) GetDefaultPublisher() bool {
	if o == nil || IsNil(o.DefaultPublisher) {
		var ret bool
		return ret
	}
	return *o.DefaultPublisher
}

// GetDefaultPublisherOk returns a tuple with the DefaultPublisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetDefaultPublisherOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultPublisher) {
		return nil, false
	}
	return o.DefaultPublisher, true
}

// HasDefaultPublisher returns a boolean if a field has been set.
func (o *NotificationPublisher) HasDefaultPublisher() bool {
	if o != nil && !IsNil(o.DefaultPublisher) {
		return true
	}

	return false
}

// SetDefaultPublisher gets a reference to the given bool and assigns it to the DefaultPublisher field.
func (o *NotificationPublisher) SetDefaultPublisher(v bool) {
	o.DefaultPublisher = &v
}

// GetUuid returns the Uuid field value
func (o *NotificationPublisher) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *NotificationPublisher) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *NotificationPublisher) SetUuid(v string) {
	o.Uuid = v
}

func (o NotificationPublisher) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationPublisher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["publisherClass"] = o.PublisherClass
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	toSerialize["templateMimeType"] = o.TemplateMimeType
	if !IsNil(o.DefaultPublisher) {
		toSerialize["defaultPublisher"] = o.DefaultPublisher
	}
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *NotificationPublisher) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"publisherClass",
		"templateMimeType",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNotificationPublisher := _NotificationPublisher{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNotificationPublisher)

	if err != nil {
		return err
	}

	*o = NotificationPublisher(varNotificationPublisher)

	return err
}

type NullableNotificationPublisher struct {
	value *NotificationPublisher
	isSet bool
}

func (v NullableNotificationPublisher) Get() *NotificationPublisher {
	return v.value
}

func (v *NullableNotificationPublisher) Set(val *NotificationPublisher) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationPublisher) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationPublisher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationPublisher(val *NotificationPublisher) *NullableNotificationPublisher {
	return &NullableNotificationPublisher{value: val, isSet: true}
}

func (v NullableNotificationPublisher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationPublisher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


