/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AffectedComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffectedComponent{}

// AffectedComponent struct for AffectedComponent
type AffectedComponent struct {
	IdentityType *string `json:"identityType,omitempty"`
	Identity *string `json:"identity,omitempty"`
	VersionType *string `json:"versionType,omitempty"`
	Version *string `json:"version,omitempty"`
	VersionEndExcluding *string `json:"versionEndExcluding,omitempty"`
	VersionEndIncluding *string `json:"versionEndIncluding,omitempty"`
	VersionStartExcluding *string `json:"versionStartExcluding,omitempty"`
	VersionStartIncluding *string `json:"versionStartIncluding,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	AffectedVersionAttributions []AffectedVersionAttribution `json:"affectedVersionAttributions,omitempty"`
}

// NewAffectedComponent instantiates a new AffectedComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffectedComponent() *AffectedComponent {
	this := AffectedComponent{}
	return &this
}

// NewAffectedComponentWithDefaults instantiates a new AffectedComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffectedComponentWithDefaults() *AffectedComponent {
	this := AffectedComponent{}
	return &this
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise.
func (o *AffectedComponent) GetIdentityType() string {
	if o == nil || IsNil(o.IdentityType) {
		var ret string
		return ret
	}
	return *o.IdentityType
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetIdentityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityType) {
		return nil, false
	}
	return o.IdentityType, true
}

// HasIdentityType returns a boolean if a field has been set.
func (o *AffectedComponent) HasIdentityType() bool {
	if o != nil && !IsNil(o.IdentityType) {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given string and assigns it to the IdentityType field.
func (o *AffectedComponent) SetIdentityType(v string) {
	o.IdentityType = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *AffectedComponent) GetIdentity() string {
	if o == nil || IsNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *AffectedComponent) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *AffectedComponent) SetIdentity(v string) {
	o.Identity = &v
}

// GetVersionType returns the VersionType field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersionType() string {
	if o == nil || IsNil(o.VersionType) {
		var ret string
		return ret
	}
	return *o.VersionType
}

// GetVersionTypeOk returns a tuple with the VersionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VersionType) {
		return nil, false
	}
	return o.VersionType, true
}

// HasVersionType returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersionType() bool {
	if o != nil && !IsNil(o.VersionType) {
		return true
	}

	return false
}

// SetVersionType gets a reference to the given string and assigns it to the VersionType field.
func (o *AffectedComponent) SetVersionType(v string) {
	o.VersionType = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AffectedComponent) SetVersion(v string) {
	o.Version = &v
}

// GetVersionEndExcluding returns the VersionEndExcluding field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersionEndExcluding() string {
	if o == nil || IsNil(o.VersionEndExcluding) {
		var ret string
		return ret
	}
	return *o.VersionEndExcluding
}

// GetVersionEndExcludingOk returns a tuple with the VersionEndExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionEndExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndExcluding) {
		return nil, false
	}
	return o.VersionEndExcluding, true
}

// HasVersionEndExcluding returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersionEndExcluding() bool {
	if o != nil && !IsNil(o.VersionEndExcluding) {
		return true
	}

	return false
}

// SetVersionEndExcluding gets a reference to the given string and assigns it to the VersionEndExcluding field.
func (o *AffectedComponent) SetVersionEndExcluding(v string) {
	o.VersionEndExcluding = &v
}

// GetVersionEndIncluding returns the VersionEndIncluding field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersionEndIncluding() string {
	if o == nil || IsNil(o.VersionEndIncluding) {
		var ret string
		return ret
	}
	return *o.VersionEndIncluding
}

// GetVersionEndIncludingOk returns a tuple with the VersionEndIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionEndIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndIncluding) {
		return nil, false
	}
	return o.VersionEndIncluding, true
}

// HasVersionEndIncluding returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersionEndIncluding() bool {
	if o != nil && !IsNil(o.VersionEndIncluding) {
		return true
	}

	return false
}

// SetVersionEndIncluding gets a reference to the given string and assigns it to the VersionEndIncluding field.
func (o *AffectedComponent) SetVersionEndIncluding(v string) {
	o.VersionEndIncluding = &v
}

// GetVersionStartExcluding returns the VersionStartExcluding field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersionStartExcluding() string {
	if o == nil || IsNil(o.VersionStartExcluding) {
		var ret string
		return ret
	}
	return *o.VersionStartExcluding
}

// GetVersionStartExcludingOk returns a tuple with the VersionStartExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionStartExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartExcluding) {
		return nil, false
	}
	return o.VersionStartExcluding, true
}

// HasVersionStartExcluding returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersionStartExcluding() bool {
	if o != nil && !IsNil(o.VersionStartExcluding) {
		return true
	}

	return false
}

// SetVersionStartExcluding gets a reference to the given string and assigns it to the VersionStartExcluding field.
func (o *AffectedComponent) SetVersionStartExcluding(v string) {
	o.VersionStartExcluding = &v
}

// GetVersionStartIncluding returns the VersionStartIncluding field value if set, zero value otherwise.
func (o *AffectedComponent) GetVersionStartIncluding() string {
	if o == nil || IsNil(o.VersionStartIncluding) {
		var ret string
		return ret
	}
	return *o.VersionStartIncluding
}

// GetVersionStartIncludingOk returns a tuple with the VersionStartIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetVersionStartIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartIncluding) {
		return nil, false
	}
	return o.VersionStartIncluding, true
}

// HasVersionStartIncluding returns a boolean if a field has been set.
func (o *AffectedComponent) HasVersionStartIncluding() bool {
	if o != nil && !IsNil(o.VersionStartIncluding) {
		return true
	}

	return false
}

// SetVersionStartIncluding gets a reference to the given string and assigns it to the VersionStartIncluding field.
func (o *AffectedComponent) SetVersionStartIncluding(v string) {
	o.VersionStartIncluding = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *AffectedComponent) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *AffectedComponent) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *AffectedComponent) SetUuid(v string) {
	o.Uuid = &v
}

// GetAffectedVersionAttributions returns the AffectedVersionAttributions field value if set, zero value otherwise.
func (o *AffectedComponent) GetAffectedVersionAttributions() []AffectedVersionAttribution {
	if o == nil || IsNil(o.AffectedVersionAttributions) {
		var ret []AffectedVersionAttribution
		return ret
	}
	return o.AffectedVersionAttributions
}

// GetAffectedVersionAttributionsOk returns a tuple with the AffectedVersionAttributions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedComponent) GetAffectedVersionAttributionsOk() ([]AffectedVersionAttribution, bool) {
	if o == nil || IsNil(o.AffectedVersionAttributions) {
		return nil, false
	}
	return o.AffectedVersionAttributions, true
}

// HasAffectedVersionAttributions returns a boolean if a field has been set.
func (o *AffectedComponent) HasAffectedVersionAttributions() bool {
	if o != nil && !IsNil(o.AffectedVersionAttributions) {
		return true
	}

	return false
}

// SetAffectedVersionAttributions gets a reference to the given []AffectedVersionAttribution and assigns it to the AffectedVersionAttributions field.
func (o *AffectedComponent) SetAffectedVersionAttributions(v []AffectedVersionAttribution) {
	o.AffectedVersionAttributions = v
}

func (o AffectedComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffectedComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityType) {
		toSerialize["identityType"] = o.IdentityType
	}
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !IsNil(o.VersionType) {
		toSerialize["versionType"] = o.VersionType
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VersionEndExcluding) {
		toSerialize["versionEndExcluding"] = o.VersionEndExcluding
	}
	if !IsNil(o.VersionEndIncluding) {
		toSerialize["versionEndIncluding"] = o.VersionEndIncluding
	}
	if !IsNil(o.VersionStartExcluding) {
		toSerialize["versionStartExcluding"] = o.VersionStartExcluding
	}
	if !IsNil(o.VersionStartIncluding) {
		toSerialize["versionStartIncluding"] = o.VersionStartIncluding
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.AffectedVersionAttributions) {
		toSerialize["affectedVersionAttributions"] = o.AffectedVersionAttributions
	}
	return toSerialize, nil
}

type NullableAffectedComponent struct {
	value *AffectedComponent
	isSet bool
}

func (v NullableAffectedComponent) Get() *AffectedComponent {
	return v.value
}

func (v *NullableAffectedComponent) Set(val *AffectedComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableAffectedComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableAffectedComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffectedComponent(val *AffectedComponent) *NullableAffectedComponent {
	return &NullableAffectedComponent{value: val, isSet: true}
}

func (v NullableAffectedComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffectedComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


