/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceComponent{}

// ServiceComponent struct for ServiceComponent
type ServiceComponent struct {
	Provider *OrganizationalEntity `json:"provider,omitempty"`
	Group *string `json:"group,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Name string `json:"name" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Version *string `json:"version,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Description *string `json:"description,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	Endpoints []string `json:"endpoints,omitempty"`
	Authenticated *bool `json:"authenticated,omitempty"`
	CrossesTrustBoundary *bool `json:"crossesTrustBoundary,omitempty"`
	Data []DataClassification `json:"data,omitempty"`
	ExternalReferences []ExternalReference `json:"externalReferences,omitempty"`
	Parent *ServiceComponent `json:"parent,omitempty"`
	Children []ServiceComponent `json:"children,omitempty"`
	Vulnerabilities []Vulnerability `json:"vulnerabilities,omitempty"`
	Project Project `json:"project"`
	LastInheritedRiskScore *float64 `json:"lastInheritedRiskScore,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Uuid string `json:"uuid"`
	BomRef *string `json:"bomRef,omitempty"`
}

type _ServiceComponent ServiceComponent

// NewServiceComponent instantiates a new ServiceComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceComponent(name string, project Project, uuid string) *ServiceComponent {
	this := ServiceComponent{}
	this.Name = name
	this.Project = project
	this.Uuid = uuid
	return &this
}

// NewServiceComponentWithDefaults instantiates a new ServiceComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceComponentWithDefaults() *ServiceComponent {
	this := ServiceComponent{}
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ServiceComponent) GetProvider() OrganizationalEntity {
	if o == nil || IsNil(o.Provider) {
		var ret OrganizationalEntity
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetProviderOk() (*OrganizationalEntity, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ServiceComponent) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given OrganizationalEntity and assigns it to the Provider field.
func (o *ServiceComponent) SetProvider(v OrganizationalEntity) {
	o.Provider = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ServiceComponent) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ServiceComponent) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ServiceComponent) SetGroup(v string) {
	o.Group = &v
}

// GetName returns the Name field value
func (o *ServiceComponent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceComponent) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ServiceComponent) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ServiceComponent) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ServiceComponent) SetVersion(v string) {
	o.Version = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceComponent) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceComponent) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceComponent) SetDescription(v string) {
	o.Description = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *ServiceComponent) GetEndpoints() []string {
	if o == nil || IsNil(o.Endpoints) {
		var ret []string
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetEndpointsOk() ([]string, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *ServiceComponent) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []string and assigns it to the Endpoints field.
func (o *ServiceComponent) SetEndpoints(v []string) {
	o.Endpoints = v
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *ServiceComponent) GetAuthenticated() bool {
	if o == nil || IsNil(o.Authenticated) {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticated) {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *ServiceComponent) HasAuthenticated() bool {
	if o != nil && !IsNil(o.Authenticated) {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *ServiceComponent) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetCrossesTrustBoundary returns the CrossesTrustBoundary field value if set, zero value otherwise.
func (o *ServiceComponent) GetCrossesTrustBoundary() bool {
	if o == nil || IsNil(o.CrossesTrustBoundary) {
		var ret bool
		return ret
	}
	return *o.CrossesTrustBoundary
}

// GetCrossesTrustBoundaryOk returns a tuple with the CrossesTrustBoundary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetCrossesTrustBoundaryOk() (*bool, bool) {
	if o == nil || IsNil(o.CrossesTrustBoundary) {
		return nil, false
	}
	return o.CrossesTrustBoundary, true
}

// HasCrossesTrustBoundary returns a boolean if a field has been set.
func (o *ServiceComponent) HasCrossesTrustBoundary() bool {
	if o != nil && !IsNil(o.CrossesTrustBoundary) {
		return true
	}

	return false
}

// SetCrossesTrustBoundary gets a reference to the given bool and assigns it to the CrossesTrustBoundary field.
func (o *ServiceComponent) SetCrossesTrustBoundary(v bool) {
	o.CrossesTrustBoundary = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ServiceComponent) GetData() []DataClassification {
	if o == nil || IsNil(o.Data) {
		var ret []DataClassification
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetDataOk() ([]DataClassification, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ServiceComponent) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []DataClassification and assigns it to the Data field.
func (o *ServiceComponent) SetData(v []DataClassification) {
	o.Data = v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *ServiceComponent) GetExternalReferences() []ExternalReference {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []ExternalReference
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetExternalReferencesOk() ([]ExternalReference, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *ServiceComponent) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []ExternalReference and assigns it to the ExternalReferences field.
func (o *ServiceComponent) SetExternalReferences(v []ExternalReference) {
	o.ExternalReferences = v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ServiceComponent) GetParent() ServiceComponent {
	if o == nil || IsNil(o.Parent) {
		var ret ServiceComponent
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetParentOk() (*ServiceComponent, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ServiceComponent) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ServiceComponent and assigns it to the Parent field.
func (o *ServiceComponent) SetParent(v ServiceComponent) {
	o.Parent = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ServiceComponent) GetChildren() []ServiceComponent {
	if o == nil || IsNil(o.Children) {
		var ret []ServiceComponent
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetChildrenOk() ([]ServiceComponent, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ServiceComponent) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []ServiceComponent and assigns it to the Children field.
func (o *ServiceComponent) SetChildren(v []ServiceComponent) {
	o.Children = v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *ServiceComponent) GetVulnerabilities() []Vulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []Vulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetVulnerabilitiesOk() ([]Vulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *ServiceComponent) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []Vulnerability and assigns it to the Vulnerabilities field.
func (o *ServiceComponent) SetVulnerabilities(v []Vulnerability) {
	o.Vulnerabilities = v
}

// GetProject returns the Project field value
func (o *ServiceComponent) GetProject() Project {
	if o == nil {
		var ret Project
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetProjectOk() (*Project, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *ServiceComponent) SetProject(v Project) {
	o.Project = v
}

// GetLastInheritedRiskScore returns the LastInheritedRiskScore field value if set, zero value otherwise.
func (o *ServiceComponent) GetLastInheritedRiskScore() float64 {
	if o == nil || IsNil(o.LastInheritedRiskScore) {
		var ret float64
		return ret
	}
	return *o.LastInheritedRiskScore
}

// GetLastInheritedRiskScoreOk returns a tuple with the LastInheritedRiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetLastInheritedRiskScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.LastInheritedRiskScore) {
		return nil, false
	}
	return o.LastInheritedRiskScore, true
}

// HasLastInheritedRiskScore returns a boolean if a field has been set.
func (o *ServiceComponent) HasLastInheritedRiskScore() bool {
	if o != nil && !IsNil(o.LastInheritedRiskScore) {
		return true
	}

	return false
}

// SetLastInheritedRiskScore gets a reference to the given float64 and assigns it to the LastInheritedRiskScore field.
func (o *ServiceComponent) SetLastInheritedRiskScore(v float64) {
	o.LastInheritedRiskScore = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ServiceComponent) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ServiceComponent) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ServiceComponent) SetNotes(v string) {
	o.Notes = &v
}

// GetUuid returns the Uuid field value
func (o *ServiceComponent) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ServiceComponent) SetUuid(v string) {
	o.Uuid = v
}

// GetBomRef returns the BomRef field value if set, zero value otherwise.
func (o *ServiceComponent) GetBomRef() string {
	if o == nil || IsNil(o.BomRef) {
		var ret string
		return ret
	}
	return *o.BomRef
}

// GetBomRefOk returns a tuple with the BomRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceComponent) GetBomRefOk() (*string, bool) {
	if o == nil || IsNil(o.BomRef) {
		return nil, false
	}
	return o.BomRef, true
}

// HasBomRef returns a boolean if a field has been set.
func (o *ServiceComponent) HasBomRef() bool {
	if o != nil && !IsNil(o.BomRef) {
		return true
	}

	return false
}

// SetBomRef gets a reference to the given string and assigns it to the BomRef field.
func (o *ServiceComponent) SetBomRef(v string) {
	o.BomRef = &v
}

func (o ServiceComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.Authenticated) {
		toSerialize["authenticated"] = o.Authenticated
	}
	if !IsNil(o.CrossesTrustBoundary) {
		toSerialize["crossesTrustBoundary"] = o.CrossesTrustBoundary
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	toSerialize["project"] = o.Project
	if !IsNil(o.LastInheritedRiskScore) {
		toSerialize["lastInheritedRiskScore"] = o.LastInheritedRiskScore
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	toSerialize["uuid"] = o.Uuid
	if !IsNil(o.BomRef) {
		toSerialize["bomRef"] = o.BomRef
	}
	return toSerialize, nil
}

func (o *ServiceComponent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"project",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceComponent := _ServiceComponent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceComponent)

	if err != nil {
		return err
	}

	*o = ServiceComponent(varServiceComponent)

	return err
}

type NullableServiceComponent struct {
	value *ServiceComponent
	isSet bool
}

func (v NullableServiceComponent) Get() *ServiceComponent {
	return v.value
}

func (v *NullableServiceComponent) Set(val *ServiceComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceComponent(val *ServiceComponent) *NullableServiceComponent {
	return &NullableServiceComponent{value: val, isSet: true}
}

func (v NullableServiceComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


