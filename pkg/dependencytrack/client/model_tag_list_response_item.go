/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TagListResponseItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagListResponseItem{}

// TagListResponseItem struct for TagListResponseItem
type TagListResponseItem struct {
	// Name of the tag
	Name string `json:"name"`
	// Number of projects assigned to this tag
	ProjectCount int64 `json:"projectCount"`
	// Number of collection projects assigned to this tag
	CollectionProjectCount int64 `json:"collectionProjectCount"`
	// Number of policies assigned to this tag
	PolicyCount int64 `json:"policyCount"`
	// Number of notification rules assigned to this tag
	NotificationRuleCount int64 `json:"notificationRuleCount"`
}

type _TagListResponseItem TagListResponseItem

// NewTagListResponseItem instantiates a new TagListResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagListResponseItem(name string, projectCount int64, collectionProjectCount int64, policyCount int64, notificationRuleCount int64) *TagListResponseItem {
	this := TagListResponseItem{}
	this.Name = name
	this.ProjectCount = projectCount
	this.CollectionProjectCount = collectionProjectCount
	this.PolicyCount = policyCount
	this.NotificationRuleCount = notificationRuleCount
	return &this
}

// NewTagListResponseItemWithDefaults instantiates a new TagListResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagListResponseItemWithDefaults() *TagListResponseItem {
	this := TagListResponseItem{}
	return &this
}

// GetName returns the Name field value
func (o *TagListResponseItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TagListResponseItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TagListResponseItem) SetName(v string) {
	o.Name = v
}

// GetProjectCount returns the ProjectCount field value
func (o *TagListResponseItem) GetProjectCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectCount
}

// GetProjectCountOk returns a tuple with the ProjectCount field value
// and a boolean to check if the value has been set.
func (o *TagListResponseItem) GetProjectCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectCount, true
}

// SetProjectCount sets field value
func (o *TagListResponseItem) SetProjectCount(v int64) {
	o.ProjectCount = v
}

// GetCollectionProjectCount returns the CollectionProjectCount field value
func (o *TagListResponseItem) GetCollectionProjectCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CollectionProjectCount
}

// GetCollectionProjectCountOk returns a tuple with the CollectionProjectCount field value
// and a boolean to check if the value has been set.
func (o *TagListResponseItem) GetCollectionProjectCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionProjectCount, true
}

// SetCollectionProjectCount sets field value
func (o *TagListResponseItem) SetCollectionProjectCount(v int64) {
	o.CollectionProjectCount = v
}

// GetPolicyCount returns the PolicyCount field value
func (o *TagListResponseItem) GetPolicyCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PolicyCount
}

// GetPolicyCountOk returns a tuple with the PolicyCount field value
// and a boolean to check if the value has been set.
func (o *TagListResponseItem) GetPolicyCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyCount, true
}

// SetPolicyCount sets field value
func (o *TagListResponseItem) SetPolicyCount(v int64) {
	o.PolicyCount = v
}

// GetNotificationRuleCount returns the NotificationRuleCount field value
func (o *TagListResponseItem) GetNotificationRuleCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NotificationRuleCount
}

// GetNotificationRuleCountOk returns a tuple with the NotificationRuleCount field value
// and a boolean to check if the value has been set.
func (o *TagListResponseItem) GetNotificationRuleCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationRuleCount, true
}

// SetNotificationRuleCount sets field value
func (o *TagListResponseItem) SetNotificationRuleCount(v int64) {
	o.NotificationRuleCount = v
}

func (o TagListResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagListResponseItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["projectCount"] = o.ProjectCount
	toSerialize["collectionProjectCount"] = o.CollectionProjectCount
	toSerialize["policyCount"] = o.PolicyCount
	toSerialize["notificationRuleCount"] = o.NotificationRuleCount
	return toSerialize, nil
}

func (o *TagListResponseItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"projectCount",
		"collectionProjectCount",
		"policyCount",
		"notificationRuleCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagListResponseItem := _TagListResponseItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagListResponseItem)

	if err != nil {
		return err
	}

	*o = TagListResponseItem(varTagListResponseItem)

	return err
}

type NullableTagListResponseItem struct {
	value *TagListResponseItem
	isSet bool
}

func (v NullableTagListResponseItem) Get() *TagListResponseItem {
	return v.value
}

func (v *NullableTagListResponseItem) Set(val *TagListResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTagListResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTagListResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagListResponseItem(val *TagListResponseItem) *NullableTagListResponseItem {
	return &NullableTagListResponseItem{value: val, isSet: true}
}

func (v NullableTagListResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagListResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


