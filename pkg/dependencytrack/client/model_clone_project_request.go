/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CloneProjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneProjectRequest{}

// CloneProjectRequest struct for CloneProjectRequest
type CloneProjectRequest struct {
	Project string `json:"project" validate:"regexp=^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"`
	Version string `json:"version" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}\\\\n\\\\r\\\\t]*$"`
	IncludeTags *bool `json:"includeTags,omitempty"`
	IncludeProperties *bool `json:"includeProperties,omitempty"`
	IncludeDependencies *bool `json:"includeDependencies,omitempty"`
	IncludeComponents *bool `json:"includeComponents,omitempty"`
	IncludeServices *bool `json:"includeServices,omitempty"`
	IncludeAuditHistory *bool `json:"includeAuditHistory,omitempty"`
	IncludeACL *bool `json:"includeACL,omitempty"`
	IncludePolicyViolations *bool `json:"includePolicyViolations,omitempty"`
	MakeCloneLatest *bool `json:"makeCloneLatest,omitempty"`
}

type _CloneProjectRequest CloneProjectRequest

// NewCloneProjectRequest instantiates a new CloneProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneProjectRequest(project string, version string) *CloneProjectRequest {
	this := CloneProjectRequest{}
	this.Project = project
	this.Version = version
	return &this
}

// NewCloneProjectRequestWithDefaults instantiates a new CloneProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneProjectRequestWithDefaults() *CloneProjectRequest {
	this := CloneProjectRequest{}
	return &this
}

// GetProject returns the Project field value
func (o *CloneProjectRequest) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *CloneProjectRequest) SetProject(v string) {
	o.Project = v
}

// GetVersion returns the Version field value
func (o *CloneProjectRequest) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CloneProjectRequest) SetVersion(v string) {
	o.Version = v
}

// GetIncludeTags returns the IncludeTags field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeTags() bool {
	if o == nil || IsNil(o.IncludeTags) {
		var ret bool
		return ret
	}
	return *o.IncludeTags
}

// GetIncludeTagsOk returns a tuple with the IncludeTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeTags) {
		return nil, false
	}
	return o.IncludeTags, true
}

// HasIncludeTags returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeTags() bool {
	if o != nil && !IsNil(o.IncludeTags) {
		return true
	}

	return false
}

// SetIncludeTags gets a reference to the given bool and assigns it to the IncludeTags field.
func (o *CloneProjectRequest) SetIncludeTags(v bool) {
	o.IncludeTags = &v
}

// GetIncludeProperties returns the IncludeProperties field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeProperties() bool {
	if o == nil || IsNil(o.IncludeProperties) {
		var ret bool
		return ret
	}
	return *o.IncludeProperties
}

// GetIncludePropertiesOk returns a tuple with the IncludeProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludePropertiesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeProperties) {
		return nil, false
	}
	return o.IncludeProperties, true
}

// HasIncludeProperties returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeProperties() bool {
	if o != nil && !IsNil(o.IncludeProperties) {
		return true
	}

	return false
}

// SetIncludeProperties gets a reference to the given bool and assigns it to the IncludeProperties field.
func (o *CloneProjectRequest) SetIncludeProperties(v bool) {
	o.IncludeProperties = &v
}

// GetIncludeDependencies returns the IncludeDependencies field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeDependencies() bool {
	if o == nil || IsNil(o.IncludeDependencies) {
		var ret bool
		return ret
	}
	return *o.IncludeDependencies
}

// GetIncludeDependenciesOk returns a tuple with the IncludeDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeDependenciesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeDependencies) {
		return nil, false
	}
	return o.IncludeDependencies, true
}

// HasIncludeDependencies returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeDependencies() bool {
	if o != nil && !IsNil(o.IncludeDependencies) {
		return true
	}

	return false
}

// SetIncludeDependencies gets a reference to the given bool and assigns it to the IncludeDependencies field.
func (o *CloneProjectRequest) SetIncludeDependencies(v bool) {
	o.IncludeDependencies = &v
}

// GetIncludeComponents returns the IncludeComponents field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeComponents() bool {
	if o == nil || IsNil(o.IncludeComponents) {
		var ret bool
		return ret
	}
	return *o.IncludeComponents
}

// GetIncludeComponentsOk returns a tuple with the IncludeComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeComponentsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeComponents) {
		return nil, false
	}
	return o.IncludeComponents, true
}

// HasIncludeComponents returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeComponents() bool {
	if o != nil && !IsNil(o.IncludeComponents) {
		return true
	}

	return false
}

// SetIncludeComponents gets a reference to the given bool and assigns it to the IncludeComponents field.
func (o *CloneProjectRequest) SetIncludeComponents(v bool) {
	o.IncludeComponents = &v
}

// GetIncludeServices returns the IncludeServices field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeServices() bool {
	if o == nil || IsNil(o.IncludeServices) {
		var ret bool
		return ret
	}
	return *o.IncludeServices
}

// GetIncludeServicesOk returns a tuple with the IncludeServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeServicesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeServices) {
		return nil, false
	}
	return o.IncludeServices, true
}

// HasIncludeServices returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeServices() bool {
	if o != nil && !IsNil(o.IncludeServices) {
		return true
	}

	return false
}

// SetIncludeServices gets a reference to the given bool and assigns it to the IncludeServices field.
func (o *CloneProjectRequest) SetIncludeServices(v bool) {
	o.IncludeServices = &v
}

// GetIncludeAuditHistory returns the IncludeAuditHistory field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeAuditHistory() bool {
	if o == nil || IsNil(o.IncludeAuditHistory) {
		var ret bool
		return ret
	}
	return *o.IncludeAuditHistory
}

// GetIncludeAuditHistoryOk returns a tuple with the IncludeAuditHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeAuditHistoryOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAuditHistory) {
		return nil, false
	}
	return o.IncludeAuditHistory, true
}

// HasIncludeAuditHistory returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeAuditHistory() bool {
	if o != nil && !IsNil(o.IncludeAuditHistory) {
		return true
	}

	return false
}

// SetIncludeAuditHistory gets a reference to the given bool and assigns it to the IncludeAuditHistory field.
func (o *CloneProjectRequest) SetIncludeAuditHistory(v bool) {
	o.IncludeAuditHistory = &v
}

// GetIncludeACL returns the IncludeACL field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludeACL() bool {
	if o == nil || IsNil(o.IncludeACL) {
		var ret bool
		return ret
	}
	return *o.IncludeACL
}

// GetIncludeACLOk returns a tuple with the IncludeACL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludeACLOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeACL) {
		return nil, false
	}
	return o.IncludeACL, true
}

// HasIncludeACL returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludeACL() bool {
	if o != nil && !IsNil(o.IncludeACL) {
		return true
	}

	return false
}

// SetIncludeACL gets a reference to the given bool and assigns it to the IncludeACL field.
func (o *CloneProjectRequest) SetIncludeACL(v bool) {
	o.IncludeACL = &v
}

// GetIncludePolicyViolations returns the IncludePolicyViolations field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetIncludePolicyViolations() bool {
	if o == nil || IsNil(o.IncludePolicyViolations) {
		var ret bool
		return ret
	}
	return *o.IncludePolicyViolations
}

// GetIncludePolicyViolationsOk returns a tuple with the IncludePolicyViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetIncludePolicyViolationsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludePolicyViolations) {
		return nil, false
	}
	return o.IncludePolicyViolations, true
}

// HasIncludePolicyViolations returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasIncludePolicyViolations() bool {
	if o != nil && !IsNil(o.IncludePolicyViolations) {
		return true
	}

	return false
}

// SetIncludePolicyViolations gets a reference to the given bool and assigns it to the IncludePolicyViolations field.
func (o *CloneProjectRequest) SetIncludePolicyViolations(v bool) {
	o.IncludePolicyViolations = &v
}

// GetMakeCloneLatest returns the MakeCloneLatest field value if set, zero value otherwise.
func (o *CloneProjectRequest) GetMakeCloneLatest() bool {
	if o == nil || IsNil(o.MakeCloneLatest) {
		var ret bool
		return ret
	}
	return *o.MakeCloneLatest
}

// GetMakeCloneLatestOk returns a tuple with the MakeCloneLatest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneProjectRequest) GetMakeCloneLatestOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCloneLatest) {
		return nil, false
	}
	return o.MakeCloneLatest, true
}

// HasMakeCloneLatest returns a boolean if a field has been set.
func (o *CloneProjectRequest) HasMakeCloneLatest() bool {
	if o != nil && !IsNil(o.MakeCloneLatest) {
		return true
	}

	return false
}

// SetMakeCloneLatest gets a reference to the given bool and assigns it to the MakeCloneLatest field.
func (o *CloneProjectRequest) SetMakeCloneLatest(v bool) {
	o.MakeCloneLatest = &v
}

func (o CloneProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project"] = o.Project
	toSerialize["version"] = o.Version
	if !IsNil(o.IncludeTags) {
		toSerialize["includeTags"] = o.IncludeTags
	}
	if !IsNil(o.IncludeProperties) {
		toSerialize["includeProperties"] = o.IncludeProperties
	}
	if !IsNil(o.IncludeDependencies) {
		toSerialize["includeDependencies"] = o.IncludeDependencies
	}
	if !IsNil(o.IncludeComponents) {
		toSerialize["includeComponents"] = o.IncludeComponents
	}
	if !IsNil(o.IncludeServices) {
		toSerialize["includeServices"] = o.IncludeServices
	}
	if !IsNil(o.IncludeAuditHistory) {
		toSerialize["includeAuditHistory"] = o.IncludeAuditHistory
	}
	if !IsNil(o.IncludeACL) {
		toSerialize["includeACL"] = o.IncludeACL
	}
	if !IsNil(o.IncludePolicyViolations) {
		toSerialize["includePolicyViolations"] = o.IncludePolicyViolations
	}
	if !IsNil(o.MakeCloneLatest) {
		toSerialize["makeCloneLatest"] = o.MakeCloneLatest
	}
	return toSerialize, nil
}

func (o *CloneProjectRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"project",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloneProjectRequest := _CloneProjectRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloneProjectRequest)

	if err != nil {
		return err
	}

	*o = CloneProjectRequest(varCloneProjectRequest)

	return err
}

type NullableCloneProjectRequest struct {
	value *CloneProjectRequest
	isSet bool
}

func (v NullableCloneProjectRequest) Get() *CloneProjectRequest {
	return v.value
}

func (v *NullableCloneProjectRequest) Set(val *CloneProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneProjectRequest(val *CloneProjectRequest) *NullableCloneProjectRequest {
	return &NullableCloneProjectRequest{value: val, isSet: true}
}

func (v NullableCloneProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


