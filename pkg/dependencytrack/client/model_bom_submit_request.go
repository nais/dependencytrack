/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BomSubmitRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BomSubmitRequest{}

// BomSubmitRequest struct for BomSubmitRequest
type BomSubmitRequest struct {
	Project string `json:"project" validate:"regexp=^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"`
	ProjectName string `json:"projectName" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	ProjectVersion string `json:"projectVersion" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	// Overwrite project tags. Modifying the tags of an existing project requires the PORTFOLIO_MANAGEMENT permission.
	ProjectTags []Tag `json:"projectTags,omitempty"`
	AutoCreate *bool `json:"autoCreate,omitempty"`
	ParentUUID *string `json:"parentUUID,omitempty" validate:"regexp=^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"`
	ParentName *string `json:"parentName,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	ParentVersion *string `json:"parentVersion,omitempty" validate:"regexp=^[\\\\p{IsWhite_Space}\\\\p{L}\\\\p{M}\\\\p{S}\\\\p{N}\\\\p{P}]*$"`
	IsLatestProjectVersion *bool `json:"isLatestProjectVersion,omitempty"`
	// Base64 encoded BOM
	Bom string `json:"bom" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
}

type _BomSubmitRequest BomSubmitRequest

// NewBomSubmitRequest instantiates a new BomSubmitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBomSubmitRequest(project string, projectName string, projectVersion string, bom string) *BomSubmitRequest {
	this := BomSubmitRequest{}
	this.Project = project
	this.ProjectName = projectName
	this.ProjectVersion = projectVersion
	this.Bom = bom
	return &this
}

// NewBomSubmitRequestWithDefaults instantiates a new BomSubmitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBomSubmitRequestWithDefaults() *BomSubmitRequest {
	this := BomSubmitRequest{}
	return &this
}

// GetProject returns the Project field value
func (o *BomSubmitRequest) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *BomSubmitRequest) SetProject(v string) {
	o.Project = v
}

// GetProjectName returns the ProjectName field value
func (o *BomSubmitRequest) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *BomSubmitRequest) SetProjectName(v string) {
	o.ProjectName = v
}

// GetProjectVersion returns the ProjectVersion field value
func (o *BomSubmitRequest) GetProjectVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectVersion
}

// GetProjectVersionOk returns a tuple with the ProjectVersion field value
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetProjectVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectVersion, true
}

// SetProjectVersion sets field value
func (o *BomSubmitRequest) SetProjectVersion(v string) {
	o.ProjectVersion = v
}

// GetProjectTags returns the ProjectTags field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetProjectTags() []Tag {
	if o == nil || IsNil(o.ProjectTags) {
		var ret []Tag
		return ret
	}
	return o.ProjectTags
}

// GetProjectTagsOk returns a tuple with the ProjectTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetProjectTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.ProjectTags) {
		return nil, false
	}
	return o.ProjectTags, true
}

// HasProjectTags returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasProjectTags() bool {
	if o != nil && !IsNil(o.ProjectTags) {
		return true
	}

	return false
}

// SetProjectTags gets a reference to the given []Tag and assigns it to the ProjectTags field.
func (o *BomSubmitRequest) SetProjectTags(v []Tag) {
	o.ProjectTags = v
}

// GetAutoCreate returns the AutoCreate field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetAutoCreate() bool {
	if o == nil || IsNil(o.AutoCreate) {
		var ret bool
		return ret
	}
	return *o.AutoCreate
}

// GetAutoCreateOk returns a tuple with the AutoCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetAutoCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoCreate) {
		return nil, false
	}
	return o.AutoCreate, true
}

// HasAutoCreate returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasAutoCreate() bool {
	if o != nil && !IsNil(o.AutoCreate) {
		return true
	}

	return false
}

// SetAutoCreate gets a reference to the given bool and assigns it to the AutoCreate field.
func (o *BomSubmitRequest) SetAutoCreate(v bool) {
	o.AutoCreate = &v
}

// GetParentUUID returns the ParentUUID field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetParentUUID() string {
	if o == nil || IsNil(o.ParentUUID) {
		var ret string
		return ret
	}
	return *o.ParentUUID
}

// GetParentUUIDOk returns a tuple with the ParentUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetParentUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ParentUUID) {
		return nil, false
	}
	return o.ParentUUID, true
}

// HasParentUUID returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasParentUUID() bool {
	if o != nil && !IsNil(o.ParentUUID) {
		return true
	}

	return false
}

// SetParentUUID gets a reference to the given string and assigns it to the ParentUUID field.
func (o *BomSubmitRequest) SetParentUUID(v string) {
	o.ParentUUID = &v
}

// GetParentName returns the ParentName field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetParentName() string {
	if o == nil || IsNil(o.ParentName) {
		var ret string
		return ret
	}
	return *o.ParentName
}

// GetParentNameOk returns a tuple with the ParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetParentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentName) {
		return nil, false
	}
	return o.ParentName, true
}

// HasParentName returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasParentName() bool {
	if o != nil && !IsNil(o.ParentName) {
		return true
	}

	return false
}

// SetParentName gets a reference to the given string and assigns it to the ParentName field.
func (o *BomSubmitRequest) SetParentName(v string) {
	o.ParentName = &v
}

// GetParentVersion returns the ParentVersion field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetParentVersion() string {
	if o == nil || IsNil(o.ParentVersion) {
		var ret string
		return ret
	}
	return *o.ParentVersion
}

// GetParentVersionOk returns a tuple with the ParentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetParentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVersion) {
		return nil, false
	}
	return o.ParentVersion, true
}

// HasParentVersion returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasParentVersion() bool {
	if o != nil && !IsNil(o.ParentVersion) {
		return true
	}

	return false
}

// SetParentVersion gets a reference to the given string and assigns it to the ParentVersion field.
func (o *BomSubmitRequest) SetParentVersion(v string) {
	o.ParentVersion = &v
}

// GetIsLatestProjectVersion returns the IsLatestProjectVersion field value if set, zero value otherwise.
func (o *BomSubmitRequest) GetIsLatestProjectVersion() bool {
	if o == nil || IsNil(o.IsLatestProjectVersion) {
		var ret bool
		return ret
	}
	return *o.IsLatestProjectVersion
}

// GetIsLatestProjectVersionOk returns a tuple with the IsLatestProjectVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetIsLatestProjectVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLatestProjectVersion) {
		return nil, false
	}
	return o.IsLatestProjectVersion, true
}

// HasIsLatestProjectVersion returns a boolean if a field has been set.
func (o *BomSubmitRequest) HasIsLatestProjectVersion() bool {
	if o != nil && !IsNil(o.IsLatestProjectVersion) {
		return true
	}

	return false
}

// SetIsLatestProjectVersion gets a reference to the given bool and assigns it to the IsLatestProjectVersion field.
func (o *BomSubmitRequest) SetIsLatestProjectVersion(v bool) {
	o.IsLatestProjectVersion = &v
}

// GetBom returns the Bom field value
func (o *BomSubmitRequest) GetBom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bom
}

// GetBomOk returns a tuple with the Bom field value
// and a boolean to check if the value has been set.
func (o *BomSubmitRequest) GetBomOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bom, true
}

// SetBom sets field value
func (o *BomSubmitRequest) SetBom(v string) {
	o.Bom = v
}

func (o BomSubmitRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BomSubmitRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project"] = o.Project
	toSerialize["projectName"] = o.ProjectName
	toSerialize["projectVersion"] = o.ProjectVersion
	if !IsNil(o.ProjectTags) {
		toSerialize["projectTags"] = o.ProjectTags
	}
	if !IsNil(o.AutoCreate) {
		toSerialize["autoCreate"] = o.AutoCreate
	}
	if !IsNil(o.ParentUUID) {
		toSerialize["parentUUID"] = o.ParentUUID
	}
	if !IsNil(o.ParentName) {
		toSerialize["parentName"] = o.ParentName
	}
	if !IsNil(o.ParentVersion) {
		toSerialize["parentVersion"] = o.ParentVersion
	}
	if !IsNil(o.IsLatestProjectVersion) {
		toSerialize["isLatestProjectVersion"] = o.IsLatestProjectVersion
	}
	toSerialize["bom"] = o.Bom
	return toSerialize, nil
}

func (o *BomSubmitRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"project",
		"projectName",
		"projectVersion",
		"bom",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBomSubmitRequest := _BomSubmitRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBomSubmitRequest)

	if err != nil {
		return err
	}

	*o = BomSubmitRequest(varBomSubmitRequest)

	return err
}

type NullableBomSubmitRequest struct {
	value *BomSubmitRequest
	isSet bool
}

func (v NullableBomSubmitRequest) Get() *BomSubmitRequest {
	return v.value
}

func (v *NullableBomSubmitRequest) Set(val *BomSubmitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBomSubmitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBomSubmitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBomSubmitRequest(val *BomSubmitRequest) *NullableBomSubmitRequest {
	return &NullableBomSubmitRequest{value: val, isSet: true}
}

func (v NullableBomSubmitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBomSubmitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


