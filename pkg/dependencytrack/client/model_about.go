/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the About type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &About{}

// About struct for About
type About struct {
	Version *string `json:"version,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	SystemUuid *string `json:"systemUuid,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Application *string `json:"application,omitempty"`
	Framework *Framework `json:"framework,omitempty"`
}

// NewAbout instantiates a new About object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbout() *About {
	this := About{}
	return &this
}

// NewAboutWithDefaults instantiates a new About object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAboutWithDefaults() *About {
	this := About{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *About) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *About) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *About) SetVersion(v string) {
	o.Version = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *About) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *About) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *About) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetSystemUuid returns the SystemUuid field value if set, zero value otherwise.
func (o *About) GetSystemUuid() string {
	if o == nil || IsNil(o.SystemUuid) {
		var ret string
		return ret
	}
	return *o.SystemUuid
}

// GetSystemUuidOk returns a tuple with the SystemUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetSystemUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUuid) {
		return nil, false
	}
	return o.SystemUuid, true
}

// HasSystemUuid returns a boolean if a field has been set.
func (o *About) HasSystemUuid() bool {
	if o != nil && !IsNil(o.SystemUuid) {
		return true
	}

	return false
}

// SetSystemUuid gets a reference to the given string and assigns it to the SystemUuid field.
func (o *About) SetSystemUuid(v string) {
	o.SystemUuid = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *About) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *About) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *About) SetUuid(v string) {
	o.Uuid = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *About) GetApplication() string {
	if o == nil || IsNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetApplicationOk() (*string, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *About) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *About) SetApplication(v string) {
	o.Application = &v
}

// GetFramework returns the Framework field value if set, zero value otherwise.
func (o *About) GetFramework() Framework {
	if o == nil || IsNil(o.Framework) {
		var ret Framework
		return ret
	}
	return *o.Framework
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *About) GetFrameworkOk() (*Framework, bool) {
	if o == nil || IsNil(o.Framework) {
		return nil, false
	}
	return o.Framework, true
}

// HasFramework returns a boolean if a field has been set.
func (o *About) HasFramework() bool {
	if o != nil && !IsNil(o.Framework) {
		return true
	}

	return false
}

// SetFramework gets a reference to the given Framework and assigns it to the Framework field.
func (o *About) SetFramework(v Framework) {
	o.Framework = &v
}

func (o About) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o About) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.SystemUuid) {
		toSerialize["systemUuid"] = o.SystemUuid
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.Framework) {
		toSerialize["framework"] = o.Framework
	}
	return toSerialize, nil
}

type NullableAbout struct {
	value *About
	isSet bool
}

func (v NullableAbout) Get() *About {
	return v.value
}

func (v *NullableAbout) Set(val *About) {
	v.value = val
	v.isSet = true
}

func (v NullableAbout) IsSet() bool {
	return v.isSet
}

func (v *NullableAbout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbout(val *About) *NullableAbout {
	return &NullableAbout{value: val, isSet: true}
}

func (v NullableAbout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


