/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ApiKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKey{}

// ApiKey struct for ApiKey
type ApiKey struct {
	Comment *string `json:"comment,omitempty"`
	Created *int64 `json:"created,omitempty"`
	LastUsed *int64 `json:"lastUsed,omitempty"`
	PublicId *string `json:"publicId,omitempty"`
	Key *string `json:"key,omitempty"`
	Legacy *bool `json:"legacy,omitempty"`
	MaskedKey *string `json:"maskedKey,omitempty"`
}

// NewApiKey instantiates a new ApiKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKey() *ApiKey {
	this := ApiKey{}
	return &this
}

// NewApiKeyWithDefaults instantiates a new ApiKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyWithDefaults() *ApiKey {
	this := ApiKey{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApiKey) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApiKey) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApiKey) SetComment(v string) {
	o.Comment = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ApiKey) GetCreated() int64 {
	if o == nil || IsNil(o.Created) {
		var ret int64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetCreatedOk() (*int64, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ApiKey) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int64 and assigns it to the Created field.
func (o *ApiKey) SetCreated(v int64) {
	o.Created = &v
}

// GetLastUsed returns the LastUsed field value if set, zero value otherwise.
func (o *ApiKey) GetLastUsed() int64 {
	if o == nil || IsNil(o.LastUsed) {
		var ret int64
		return ret
	}
	return *o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetLastUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUsed) {
		return nil, false
	}
	return o.LastUsed, true
}

// HasLastUsed returns a boolean if a field has been set.
func (o *ApiKey) HasLastUsed() bool {
	if o != nil && !IsNil(o.LastUsed) {
		return true
	}

	return false
}

// SetLastUsed gets a reference to the given int64 and assigns it to the LastUsed field.
func (o *ApiKey) SetLastUsed(v int64) {
	o.LastUsed = &v
}

// GetPublicId returns the PublicId field value if set, zero value otherwise.
func (o *ApiKey) GetPublicId() string {
	if o == nil || IsNil(o.PublicId) {
		var ret string
		return ret
	}
	return *o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublicId) {
		return nil, false
	}
	return o.PublicId, true
}

// HasPublicId returns a boolean if a field has been set.
func (o *ApiKey) HasPublicId() bool {
	if o != nil && !IsNil(o.PublicId) {
		return true
	}

	return false
}

// SetPublicId gets a reference to the given string and assigns it to the PublicId field.
func (o *ApiKey) SetPublicId(v string) {
	o.PublicId = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApiKey) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApiKey) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApiKey) SetKey(v string) {
	o.Key = &v
}

// GetLegacy returns the Legacy field value if set, zero value otherwise.
func (o *ApiKey) GetLegacy() bool {
	if o == nil || IsNil(o.Legacy) {
		var ret bool
		return ret
	}
	return *o.Legacy
}

// GetLegacyOk returns a tuple with the Legacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetLegacyOk() (*bool, bool) {
	if o == nil || IsNil(o.Legacy) {
		return nil, false
	}
	return o.Legacy, true
}

// HasLegacy returns a boolean if a field has been set.
func (o *ApiKey) HasLegacy() bool {
	if o != nil && !IsNil(o.Legacy) {
		return true
	}

	return false
}

// SetLegacy gets a reference to the given bool and assigns it to the Legacy field.
func (o *ApiKey) SetLegacy(v bool) {
	o.Legacy = &v
}

// GetMaskedKey returns the MaskedKey field value if set, zero value otherwise.
func (o *ApiKey) GetMaskedKey() string {
	if o == nil || IsNil(o.MaskedKey) {
		var ret string
		return ret
	}
	return *o.MaskedKey
}

// GetMaskedKeyOk returns a tuple with the MaskedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKey) GetMaskedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MaskedKey) {
		return nil, false
	}
	return o.MaskedKey, true
}

// HasMaskedKey returns a boolean if a field has been set.
func (o *ApiKey) HasMaskedKey() bool {
	if o != nil && !IsNil(o.MaskedKey) {
		return true
	}

	return false
}

// SetMaskedKey gets a reference to the given string and assigns it to the MaskedKey field.
func (o *ApiKey) SetMaskedKey(v string) {
	o.MaskedKey = &v
}

func (o ApiKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LastUsed) {
		toSerialize["lastUsed"] = o.LastUsed
	}
	if !IsNil(o.PublicId) {
		toSerialize["publicId"] = o.PublicId
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Legacy) {
		toSerialize["legacy"] = o.Legacy
	}
	if !IsNil(o.MaskedKey) {
		toSerialize["maskedKey"] = o.MaskedKey
	}
	return toSerialize, nil
}

type NullableApiKey struct {
	value *ApiKey
	isSet bool
}

func (v NullableApiKey) Get() *ApiKey {
	return v.value
}

func (v *NullableApiKey) Set(val *ApiKey) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKey) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKey(val *ApiKey) *NullableApiKey {
	return &NullableApiKey{value: val, isSet: true}
}

func (v NullableApiKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


