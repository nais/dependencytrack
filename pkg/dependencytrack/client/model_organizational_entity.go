/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrganizationalEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationalEntity{}

// OrganizationalEntity struct for OrganizationalEntity
type OrganizationalEntity struct {
	Name *string `json:"name,omitempty"`
	Urls []string `json:"urls,omitempty"`
	Contacts []OrganizationalContact `json:"contacts,omitempty"`
}

// NewOrganizationalEntity instantiates a new OrganizationalEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationalEntity() *OrganizationalEntity {
	this := OrganizationalEntity{}
	return &this
}

// NewOrganizationalEntityWithDefaults instantiates a new OrganizationalEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationalEntityWithDefaults() *OrganizationalEntity {
	this := OrganizationalEntity{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationalEntity) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationalEntity) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationalEntity) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationalEntity) SetName(v string) {
	o.Name = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *OrganizationalEntity) GetUrls() []string {
	if o == nil || IsNil(o.Urls) {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationalEntity) GetUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *OrganizationalEntity) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *OrganizationalEntity) SetUrls(v []string) {
	o.Urls = v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *OrganizationalEntity) GetContacts() []OrganizationalContact {
	if o == nil || IsNil(o.Contacts) {
		var ret []OrganizationalContact
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationalEntity) GetContactsOk() ([]OrganizationalContact, bool) {
	if o == nil || IsNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *OrganizationalEntity) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []OrganizationalContact and assigns it to the Contacts field.
func (o *OrganizationalEntity) SetContacts(v []OrganizationalContact) {
	o.Contacts = v
}

func (o OrganizationalEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationalEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	return toSerialize, nil
}

type NullableOrganizationalEntity struct {
	value *OrganizationalEntity
	isSet bool
}

func (v NullableOrganizationalEntity) Get() *OrganizationalEntity {
	return v.value
}

func (v *NullableOrganizationalEntity) Set(val *OrganizationalEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationalEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationalEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationalEntity(val *OrganizationalEntity) *NullableOrganizationalEntity {
	return &NullableOrganizationalEntity{value: val, isSet: true}
}

func (v NullableOrganizationalEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationalEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


