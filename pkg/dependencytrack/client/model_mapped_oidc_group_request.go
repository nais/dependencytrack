/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MappedOidcGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MappedOidcGroupRequest{}

// MappedOidcGroupRequest struct for MappedOidcGroupRequest
type MappedOidcGroupRequest struct {
	Team string `json:"team" validate:"regexp=^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"`
	Group string `json:"group" validate:"regexp=^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"`
}

type _MappedOidcGroupRequest MappedOidcGroupRequest

// NewMappedOidcGroupRequest instantiates a new MappedOidcGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMappedOidcGroupRequest(team string, group string) *MappedOidcGroupRequest {
	this := MappedOidcGroupRequest{}
	this.Team = team
	this.Group = group
	return &this
}

// NewMappedOidcGroupRequestWithDefaults instantiates a new MappedOidcGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMappedOidcGroupRequestWithDefaults() *MappedOidcGroupRequest {
	this := MappedOidcGroupRequest{}
	return &this
}

// GetTeam returns the Team field value
func (o *MappedOidcGroupRequest) GetTeam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Team
}

// GetTeamOk returns a tuple with the Team field value
// and a boolean to check if the value has been set.
func (o *MappedOidcGroupRequest) GetTeamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Team, true
}

// SetTeam sets field value
func (o *MappedOidcGroupRequest) SetTeam(v string) {
	o.Team = v
}

// GetGroup returns the Group field value
func (o *MappedOidcGroupRequest) GetGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *MappedOidcGroupRequest) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *MappedOidcGroupRequest) SetGroup(v string) {
	o.Group = v
}

func (o MappedOidcGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MappedOidcGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["team"] = o.Team
	toSerialize["group"] = o.Group
	return toSerialize, nil
}

func (o *MappedOidcGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"team",
		"group",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMappedOidcGroupRequest := _MappedOidcGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMappedOidcGroupRequest)

	if err != nil {
		return err
	}

	*o = MappedOidcGroupRequest(varMappedOidcGroupRequest)

	return err
}

type NullableMappedOidcGroupRequest struct {
	value *MappedOidcGroupRequest
	isSet bool
}

func (v NullableMappedOidcGroupRequest) Get() *MappedOidcGroupRequest {
	return v.value
}

func (v *NullableMappedOidcGroupRequest) Set(val *MappedOidcGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMappedOidcGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMappedOidcGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMappedOidcGroupRequest(val *MappedOidcGroupRequest) *NullableMappedOidcGroupRequest {
	return &NullableMappedOidcGroupRequest{value: val, isSet: true}
}

func (v NullableMappedOidcGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMappedOidcGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


