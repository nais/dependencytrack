/*
OWASP Dependency-Track

REST API of OWASP Dependency-Track

API version: 4.13.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AffectedVersionAttribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffectedVersionAttribution{}

// AffectedVersionAttribution struct for AffectedVersionAttribution
type AffectedVersionAttribution struct {
	// UNIX epoch timestamp in milliseconds
	FirstSeen int64 `json:"firstSeen"`
	// UNIX epoch timestamp in milliseconds
	LastSeen int64 `json:"lastSeen"`
	Source *string `json:"source,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

type _AffectedVersionAttribution AffectedVersionAttribution

// NewAffectedVersionAttribution instantiates a new AffectedVersionAttribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffectedVersionAttribution(firstSeen int64, lastSeen int64) *AffectedVersionAttribution {
	this := AffectedVersionAttribution{}
	this.FirstSeen = firstSeen
	this.LastSeen = lastSeen
	return &this
}

// NewAffectedVersionAttributionWithDefaults instantiates a new AffectedVersionAttribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffectedVersionAttributionWithDefaults() *AffectedVersionAttribution {
	this := AffectedVersionAttribution{}
	return &this
}

// GetFirstSeen returns the FirstSeen field value
func (o *AffectedVersionAttribution) GetFirstSeen() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FirstSeen
}

// GetFirstSeenOk returns a tuple with the FirstSeen field value
// and a boolean to check if the value has been set.
func (o *AffectedVersionAttribution) GetFirstSeenOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstSeen, true
}

// SetFirstSeen sets field value
func (o *AffectedVersionAttribution) SetFirstSeen(v int64) {
	o.FirstSeen = v
}

// GetLastSeen returns the LastSeen field value
func (o *AffectedVersionAttribution) GetLastSeen() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value
// and a boolean to check if the value has been set.
func (o *AffectedVersionAttribution) GetLastSeenOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeen, true
}

// SetLastSeen sets field value
func (o *AffectedVersionAttribution) SetLastSeen(v int64) {
	o.LastSeen = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AffectedVersionAttribution) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedVersionAttribution) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AffectedVersionAttribution) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *AffectedVersionAttribution) SetSource(v string) {
	o.Source = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *AffectedVersionAttribution) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedVersionAttribution) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *AffectedVersionAttribution) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *AffectedVersionAttribution) SetUuid(v string) {
	o.Uuid = &v
}

func (o AffectedVersionAttribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffectedVersionAttribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firstSeen"] = o.FirstSeen
	toSerialize["lastSeen"] = o.LastSeen
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

func (o *AffectedVersionAttribution) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firstSeen",
		"lastSeen",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAffectedVersionAttribution := _AffectedVersionAttribution{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAffectedVersionAttribution)

	if err != nil {
		return err
	}

	*o = AffectedVersionAttribution(varAffectedVersionAttribution)

	return err
}

type NullableAffectedVersionAttribution struct {
	value *AffectedVersionAttribution
	isSet bool
}

func (v NullableAffectedVersionAttribution) Get() *AffectedVersionAttribution {
	return v.value
}

func (v *NullableAffectedVersionAttribution) Set(val *AffectedVersionAttribution) {
	v.value = val
	v.isSet = true
}

func (v NullableAffectedVersionAttribution) IsSet() bool {
	return v.isSet
}

func (v *NullableAffectedVersionAttribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffectedVersionAttribution(val *AffectedVersionAttribution) *NullableAffectedVersionAttribution {
	return &NullableAffectedVersionAttribution{value: val, isSet: true}
}

func (v NullableAffectedVersionAttribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffectedVersionAttribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


